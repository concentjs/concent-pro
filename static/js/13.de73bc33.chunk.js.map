{"version":3,"sources":["components/dumb/general.tsx","services/appPath.ts","configs/subApp.ts","utils/obj.ts","configs/derived/menus.ts","configs/constant/routerPath.ts","configs/constant/index.ts","services/appEnvBase.ts","configs/c2Mods.ts","components/dumb/general.module.css","components/GeneralTable/model/state.ts","components/GeneralTable/model/computed.ts","components/GeneralTable/model/reducer.ts","components/GeneralTable/model/lifecycle.ts","components/GeneralTable/model/meta.ts","components/GeneralTable/model/index.ts","components/GeneralTable/index.tsx","services/concent.ts","components/AuthView/index.tsx","components/Charts/Bar/index.tsx","pages/Home/index.tsx","configs/menus.ts","configs/remoteMenus/prepareMenuData.ts","configs/constant/sys.ts","utils/common.ts"],"names":["ButtonBase","props","children","AsyncButton","className","styles","asyncButton","Blank","type","height","width","style","mergedStyle","display","VerticalBlank","EmptyView","localStorage","getItem","getBasename","window","location","hostname","pathname","commonUtil","toLocaleLowerCase","includes","appEnvBase","split","getRelativeRootPath","hash","basename","targetPathname","startsWith","extractPathAndSearch","substr","path","startIdx","length","getSearchPath","search","pathMayIncludeSearch","firstQuestionIdx","indexOf","stringMyStartsWithQuestion","substring","ensureNoStartQuestion","okeys","map","Object","keys","isValidVal","val","undefined","isObject","allowArr","Array","isArray","safeGet","obj","key","defaultValue","item","safeAssign","toMod","forEach","safeParse","jsonStr","errMsg","JSON","parse","err","Error","isNull","value","nullDef","nullValues","checkObjValues","emptyObjIsNull","emptyArrIsNull","inNullValues","keyLen","allIsNull","i","subValue","isDepthLargeThan","toCompare","depthRecorder","num","tryDetectObjDepth","curDepth","newDepth","getObjDepth","decideVal","firstVal","secondVal","inEnum","enumObj","values","homePageFullPath","path2menuItem","path2menuGroup","showingMenus","allMenus","flattedMenus","calcMenuData","menus","ret","groupItem","rest","showingMenuGroup","allMenuGroup","childItem","showInSider","setContentLayout","exact","fillDefaultValChildItem","push","isHomePage","menuItem","fillDefaultValMenuItem","calcMenus","flatted","pushToFlatted","flatMenus","getMenuData","pathName","DEMO","DEMO_USE_SETUP","SIMPLE_LIST","STEP_FORM","routerPath","routerPathCst","sys","sysCst","isProdEnv","masterAppLoadedSetSignal","setMasterAppLoadedSignal","__MASTER_APP_LOADED__","isSubApp","process","REACT_APP_IS_SUB_APP","modName","name","COUNTER","HOME","module","exports","getInitMetaData","hasMoreMode","pageSize","lockId","hasMore","current","total","list","loading","getInitialState","meta","doubleCount","newState","getTableMeta","tableId","modTableMeta","moduleState","tableMeta","parseInt","handlePageCurrentChange","_","ctx","a","fetchFn","dispatch","Date","now","fetchTableData","handleNextPage","handlePageSizeChange","clearTable","m","oldList","res","pageList","page_list","start","v","idx","__seq","targetList","concat","mounted","willUnmount","modelDesc","state","computed","reducer","lifecycle","model","useModelWithSetup","makeUseModelWithSetup","makeUseModelWithSetupCuf","makeUseModel","configure","setup","tid","fetchAfterMounted","propsFetchFn","pageSizeOptions","ccUniqueKey","on","_fetchFn","mr","effect","handelPageSizeChange","page","React","memo","settings","columns","rowKey","scroll","x","disableBtnWhenNoMore","size","dataSource","pagination","disabled","onClick","onShowSizeChange","onChange","showSizeChanger","priBuildCallParams","moduleName","connect","options","targetOptions","tag","extra","staticExtra","cuDesc","passCuDesc","ccClassKey","regOpt","callTarget","callerParams","ac","errHandler","Function","prototype","apply","call","fnName","payload","renderKey","delay","useC2Mod","useConcent","useC2DefaultMod","cst","MODULE_DEFAULT","useSetup","mergedOptions","useSetupCtx","typeCtxM","getGlobalState","getGst","getGlobalComputed","getComputed","MODULE_GLOBAL","ctxOn","globalState","authIds","authId","chartInfo","useRef","ins","useEffect","changeData","data","chart","Chart","container","autoFit","scale","alias","nice","axis","tickLine","tooltip","showMarkers","interaction","interval","position","fillOpacity","lineWidth","stroke","lineDash","render","getChart","destroy","id","layoutOptions","label","c","mods","gr","t","setInterval","ranBarData","clearInterval","changeTopViewType","e","layout","target","argMap","1","SiderViewTypes","COLLAPSED","TopHeaderTypes","HIDDEN","TopNavBarTypes","FIXED","2","NOT_COLLAPSED","3","siderViewType","topHeaderType","topNavBarType","setState","addAuthId","delAuthId","splice","homeState","homeMr","se","paddingTop","marginLeft","href","GithubOutlined","fontSize","title","QuestionCircleOutlined","Group","history","span","hoverable","cover","alt","src","Meta","description","increment","Bar","barData","showUnderLocalMode","isLocalMode","Icon","FormOutlined","Component","HomePage","OrderedListOutlined","lazy","PlusCircleOutlined","RightCircleOutlined","SiteColorTypes","SiderLogoTypes","LoginStatus","siderWidth","siderWidthPx","buttomBgColor","contentBgColor","siteThemeColor","waterMarkLabel","img1","notCollapsedLogoImg","notCollapsedLogoImgOfDark","notCollapsedLogoLabel","img2","collapsedLogoImg","collapsedLogoImgOfDark","collapsedLogoLabel","img404","img403","LS_C2PRO_SETTINGS","LS_C2PRO_SETTINGS_VER","port"],"mappings":"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","file":"static/js/13.de73bc33.chunk.js","sourcesContent":["import React from 'react';\nimport styles from \"./general.module.css\";\n\ninterface IBtn {\n  className?: string;\n}\nfunction ButtonBase(props: IBtn & React.Props<HTMLButtonElement>) {\n  return (\n    <button {...props}>\n      {props.children}\n    </button>\n  );\n}\n\nexport function Button(props: any) {\n  return <ButtonBase className={styles.button} {...props} />\n}\n\nexport function AsyncButton(props: React.Props<any>) {\n  return <ButtonBase className={styles.asyncButton} {...props} />\n}\n\n\ninterface IBlankProps {\n  children?: React.ReactNode;\n  type?: 'horizon' | 'vertical';\n  height?: string;\n  width?: string;\n  style?: React.CSSProperties;\n}\n\nexport function Blank({ children = '', type = 'horizon', height = '16px', width = '28px', style = {} }: IBlankProps) {\n  const mergedStyle = { display: 'inline-block', width, height, ...style };\n  if (type === 'vertical') mergedStyle.display = 'block';\n\n  return (\n    <div style={mergedStyle}>{children}</div>\n  );\n}\n\nexport function NormalBlank(props: { width?: string }): React.ReactElement {\n  return <Blank {...{ width: '8px', ...props }} />;\n}\n\nexport function VerticalBlank(props: { height?: string }): React.ReactElement {\n  return <Blank {...{ type: 'vertical', ...props }} />;\n}\n\n\nexport function EmptyView() {\n  return <span style={{ display: 'none' }}></span>\n}\n","import * as commonUtil from 'utils/common';\nimport { APP_NAME } from 'configs/subApp';\nimport * as appEnvBase from './appEnvBase';\n\nconst cachedAppName = localStorage.getItem('someBaseNameKey') || '';\nconst cachedApiHost = localStorage.getItem('someApiHostKey');\n\n/**\n * 应用可能处于不同的basename下\n */\n// export function getBasename() {\n//   const { hostname, pathname } = window.location;\n//   // concent-pro 站点走特殊的basename，以符合 gh-pages 目录结构\n//   if (hostname.includes('github.io') && pathname.includes('concent-pro')) return '';\n//   return cachedAppName || '';\n// }\n\nexport function getBasename() {\n  const { hostname, pathname } = window.location;\n  if (commonUtil.isLocalMode()) return APP_NAME.toLocaleLowerCase();\n\n  // github.io 部署的站点走特殊的 basename，以符合 gh-pages 目录结构\n  if (hostname.includes('github.io')) {\n    if (appEnvBase.isSubApp()) {\n      const [, , appName] = pathname.split('/');\n      return appName || APP_NAME.toLocaleLowerCase();\n    }\n    return '';\n  }\n\n\n  if (appEnvBase.isSubApp()) {\n    return '';\n  }\n  // 约定了 /{appName}/xxx/yyy 格式的路由，第一段名字作为basename\n  const [, appName] = pathname.split('/');\n  return appName || APP_NAME.toLocaleLowerCase();\n}\n\n\nexport function getApiHost() {\n  // 是本地调试机器，携带者端口号\n  if (window.location.port !== '') return '';\n  return cachedApiHost || '';\n};\n\nexport function attachBasename(url: string) {\n  return `/${getBasename()}${url}`;\n}\n\n/**\n * 通常用于下载链接的拼接\n * @param {*} url\n */\nexport function attachApiHost(url: string) {\n  return `${getApiHost()}${url}`;\n}\n\n/**\n * 去掉basename之后的相对根路径，注不含search参数，等同于 location.pathname\n * <basename>/xxx/yyy ---> /xxx/yyy\n */\nexport function getRelativeRootPath() {\n  const { pathname, hash } = window.location;\n  const basename = getBasename();\n  let targetPathname = pathname;\n  if (hash.startsWith('#')) {\n    // 取的应该是hash后面的那一段path\n    targetPathname = extractPathAndSearch(hash.substr(1)).path;\n  }\n\n  if (basename) {\n    // basename: xxx-app\n    // pathname: /xxx-app/xxx or /xxx-app/xxx\n    // 所以此处 startIdx 取 basename 长度加1\n    const startIdx = basename.length + 1;\n    targetPathname = pathname.substr(startIdx);\n  }\n  if (!targetPathname) targetPathname = '/';\n\n  return targetPathname;\n}\n\nexport function getSearchPath(path: string, search: string) {\n  return search ? `${path}?${search}` : path;\n}\n\n/**\n * 返回的search字符串是无问号前缀的字符串\n * @param pathMayIncludeSearch\n * @returns\n */\nexport function extractPathAndSearch(pathMayIncludeSearch: string): { path: string, search: string } {\n  if (!pathMayIncludeSearch) return { path: '', search: '' };\n\n  const ensureNoStartQuestion = (stringMyStartsWithQuestion: string): string => {\n    if (stringMyStartsWithQuestion.startsWith('?')) {\n      const restStr = stringMyStartsWithQuestion.substr(1);\n      return ensureNoStartQuestion(restStr);\n    }\n    return stringMyStartsWithQuestion;\n  };\n\n  const firstQuestionIdx = pathMayIncludeSearch.indexOf('?');\n  let path = pathMayIncludeSearch;\n  let search = '';\n  if (firstQuestionIdx >= 0) {\n    const stringMyStartsWithQuestion = pathMayIncludeSearch.substr(firstQuestionIdx);\n    path = pathMayIncludeSearch.substring(0, firstQuestionIdx);\n    // 防止是 /xxx/yyy ????a=1 这样的错误数据传进来\n    search = ensureNoStartQuestion(stringMyStartsWithQuestion);\n  }\n\n  return { path, search };\n}\n","/**\n * 用于处理分微前端场景，在动态加载新模块时，防止不同的子应用模块重复\n * 推荐起一个和当前子应用同名的名字\n * 如不需要前缀，这里写为 '' 即可\n */\n\nexport const APP_NAME = 'your-app';\n","\nexport function okeys<T extends Record<string, any>>(map: T) {\n  // 外部需要自己 as (keyof T)[]\n  return Object.keys(map);\n}\n\nexport function isValidVal(val: any) {\n  return val !== undefined && val !== null && val !== '';\n}\n\n/**\n * 判断是否是对象 {} []\n * @param {*} val\n */\nexport function isObject(val: any, allowArr = true) {\n  // 防止 typeof null === 'object' 成立\n  if (!val) return false;\n  if (allowArr) {\n    return typeof val === 'object';\n  }\n  return typeof val === 'object' && !Array.isArray(val);\n}\n\nexport function clone<T extends Record<string, any>>(obj: T): T {\n  if (obj) return JSON.parse(JSON.stringify(obj));\n\n  throw new Error('empty object');\n}\n\nexport function safeGetItemFromArray<T = any>(arr: T[], idx: number, defaultValue: T) {\n  let item = arr[idx];\n  if (!item) {\n    item = arr[idx] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeGet<T = any>(obj: Record<string, any>, key: string, defaultValue: T) {\n  let item = obj[key];\n  if (!item) {\n    item = obj[key] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeAssign(obj: Record<string, any>, toMod: Record<string, any> = {}) {\n  Object.keys(toMod).forEach((key) => {\n    obj[key] = toMod[key];\n  });\n  return obj;\n}\n\n/**\n * 指定了 defaultValue 时才不会抛出解析字符串失败的错误\n * @param jsonStr\n * @param defaultValue\n */\nexport function safeParse<T = any>(jsonStr: string, defaultValue?: T, errMsg?: string): T {\n  try {\n    return JSON.parse(jsonStr);\n  } catch (err) {\n    if (defaultValue) return defaultValue;\n    if (errMsg) throw new Error(errMsg);\n    throw err;\n  }\n}\n\ninterface NullDef {\n  nullValues?: any[];\n  /** {} 算不算空，true算空*/\n  emptyObjIsNull?: boolean;\n  /** 需不需要检查 {a:'', b:'' }, 默认false, 为true时，如果传入的是object，检查所有value算不算空 */\n  checkObjValues?: boolean;\n  emptyArrIsNull?: boolean;\n}\n/**\n *\n * @param value\n * @param nullDef\n */\nexport function isNull(value: any, nullDef: NullDef = {}) {\n  const {\n    nullValues = [null, undefined, ''], checkObjValues = false,\n    emptyObjIsNull = true, emptyArrIsNull = true,\n  } = nullDef;\n\n  const inNullValues = nullValues.includes(value);\n  if (inNullValues) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    if (emptyArrIsNull) return value.length === 0;\n    return false;\n  }\n\n  if (typeof value === 'object') {\n    const keys = okeys(value);\n    const keyLen = keys.length;\n\n    // {a:'', b:'' } 所有子value为空才算空\n    if (checkObjValues) {\n      let allIsNull = true;\n      for (let i = 0; i < keyLen; i++) {\n        const subValue = value[keys[i]];\n        if (!isNull(subValue)) {\n          allIsNull = false;\n          break;\n        }\n      }\n\n      return allIsNull;\n    }\n    if (emptyObjIsNull) return keyLen === 0;\n    return false;\n  }\n\n  return false;\n}\n\nexport function reverseMap(originalMap: Record<string, string | number>) {\n  return Object.keys(originalMap).reduce((map, key) => {\n    const value = originalMap[key];\n    map[value] = key;\n    return map;\n  }, {} as Record<string, string>);\n}\n\n/**\n * 后端有些接口返回空map的格式是数组 [],\n * 但其实期望的是 {},\n * 为了保证上传业务逻辑消费数据的格式一致性，使用此函数做修正\n */\nexport function ensureMap(obj: Record<string, any>, key: string) {\n  if (Array.isArray(obj[key])) {\n    obj[key] = {};\n  }\n}\n\n/**\n * 从一个已存在的map里按规则变异出一个新的map\n * @param map\n * @param getValue\n * @param getKey\n */\nexport function transformMap(map: Record<string, any>, getValue?: (value: any, key: string) => any, getKey?: (key: string, value: any) => string) {\n  const newMap = {} as Record<string, any>;\n  const targetGetKey = getKey || (key => key);\n\n  okeys(map).forEach(key => {\n    const value = map[key];\n    const mapKey = targetGetKey(key, value);\n    newMap[mapKey] = getValue ? getValue(value, key) : value;\n  });\n  return newMap;\n}\n\n/**\n * map 转为 list\n * @param map\n * @param keyName\n * @param valueName\n */\nexport function toList<V, Item>(map: Record<string, V>, getItem: (key: string, value: V) => Item) {\n  const list = [] as Item[];\n  okeys(map).forEach(key => {\n    const item = getItem(key, map[key]);\n    list.push(item);\n  });\n  return list;\n}\n\n/**\n * 过滤list，按规则组装新的item后返回一个新的 list\n * @param list\n * @param filterCb\n * @param getNewItem\n */\nexport function filterList<Item, NewItem>(list: Item[], filterCb: (item: Item) => boolean, getNewItem: (item: Item) => NewItem) {\n  const newList = [] as NewItem[];\n  list.forEach(item => {\n    if (filterCb(item)) newList.push(getNewItem(item));\n  });\n  return newList;\n}\n\n/**\n  * 对比新老对象，提取出新对象里发生变化的部分并单独返回\n  * 注意此函数只做浅比较\n  * @param {object} oldObj\n  * @param {object} newObj\n  * @param {string} [fixedKeys=[]] - 必定要包含的key\n  */\nexport function extractChangedPart(oldObj: Record<string, any>, newObj: Record<string, any>, fixedKeys: string[] = []) {\n  const changed = {} as Record<string, any>;\n  const oldObjKeys = okeys(oldObj);\n  const newObjKeys = okeys(newObj);\n  const traversalKeys = newObjKeys.length > oldObjKeys.length ? newObjKeys : oldObjKeys;\n\n  traversalKeys.forEach(key => {\n    const newVal = newObj[key];\n    if (fixedKeys.includes(key)) {\n      changed[key] = newVal;\n      return;\n    }\n    if (newVal === undefined) return;\n    if (oldObj[key] !== newVal) changed[key] = newVal;\n  });\n  return changed;\n}\n\nexport function hasProperty(obj: Record<string, any>, property: string) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\n\nexport function purify(obj: Record<string, any>, isValueInvalid?: (val: any) => boolean): Record<string, any> {\n  // isValidVal or isNull\n  const targetIsInvalid = isValueInvalid || (value => !isNull(value));\n  const pureObj = {} as Record<string, any>;\n  okeys(obj).forEach(key => {\n    if (targetIsInvalid(obj[key])) pureObj[key] = obj[key];\n  });\n  return pureObj;\n}\n\n/**\n * 针对string 或则 number 元素的数组做不重复添加\n * @param arr\n * @param item\n */\nexport function noDupPush(arr: (string | number)[], item: string | number) {\n  if (!arr.includes(item)) arr.push(item);\n}\n\nexport function getVal(obj: Record<string, any>, key: string) {\n  return obj[key];\n}\n\n\nexport function getDepth(obj: Record<string, any>) {\n  let depth = 0;\n  if (obj.children) {\n    obj.children.forEach((d: any) => {\n      const tmpDepth = getDepth(d);\n      if (tmpDepth > depth) {\n        depth = tmpDepth;\n      }\n    });\n  }\n  return 1 + depth;\n}\n\nexport function getObjDepth(obj: Record<string, any>) {\n  type DepthRecorder = { num: number };\n\n  const tryDetectObjDepth = (obj: Record<string, any>, curDepth: number, depthRecorder: DepthRecorder) => {\n    const keys = okeys(obj);\n    const newDepth = curDepth + 1;\n    for (let i = 0; i < keys.length; i++) {\n      const val = obj[keys[i]];\n      if (isObject(val)) {\n        if (depthRecorder.num < newDepth) depthRecorder.num = newDepth;\n        tryDetectObjDepth(val, newDepth, depthRecorder);\n      }\n    }\n  };\n\n  const depthRecorder: DepthRecorder = { num: 1 };\n  tryDetectObjDepth(obj, 1, depthRecorder);\n  return depthRecorder.num;\n}\n\nexport function isDepthLargeThan(obj: Record<string, any>, toCompare: number) {\n  const depth = getObjDepth(obj);\n  return depth > toCompare;\n}\n\n/**\n * 确定一个有效值，如果左边无效，则取右边的备用值\n * @param firstVal\n * @param secondVal\n */\nexport function decideVal<T extends any>(firstVal: any, secondVal: T): T {\n  if (!isNull(firstVal)) return firstVal;\n  return secondVal;\n}\n\nexport function inEnum(val: string | number, enumObj: Record<string, string | number>) {\n  return Object.values(enumObj).includes(val);\n}\n","\n/**\n * 由 configs/menus 派生出的数据\n */\nimport { IMenuGroup, IMenuItem } from '../menus';\n\n// 打平菜单为一层的结构\nfunction flatMenus(menus: Array<IMenuItem | IMenuGroup>) {\n  const flatted = [] as IMenuItem[];\n\n  const pushToFlatted = (item: IMenuItem) => {\n    flatted.push(item);\n  };\n\n  menus.forEach((item) => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      groupItem.children.forEach(pushToFlatted);\n      return;\n    }\n    const menuItem = item as IMenuItem;\n    pushToFlatted(menuItem);\n  });\n\n  return flatted;\n}\n\n// 提前计算好 menus 的相关映射关系，或者其他目标参数，以及填充true默认值(方便其他地方使用时能够拥有正确的默认值)\nfunction calcMenus(menus: Array<IMenuItem | IMenuGroup>) {\n  let homePageFullPath = '';\n\n  menus.forEach((item) => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      const { children, ...rest } = groupItem;\n      const showingMenuGroup: IMenuGroup = { ...rest, children: [] };\n      const allMenuGroup: IMenuGroup = { ...rest, children: [] };\n\n      children.forEach((childItem) => {\n        const { path, showInSider = true, setContentLayout = true, exact = true, ...rest } = childItem;\n        const fillDefaultValChildItem = { ...rest, exact, path, showInSider, setContentLayout };\n        allMenuGroup.children.push(fillDefaultValChildItem);\n\n        path2menuGroup[path] = allMenuGroup;\n        path2menuItem[path] = fillDefaultValChildItem;\n        if (childItem.isHomePage) {\n          homePageFullPath = path;\n          path2menuGroup['/'] = groupItem;\n          path2menuItem['/'] = fillDefaultValChildItem;\n        }\n        if (showInSider) {\n          showingMenuGroup.children.push(fillDefaultValChildItem);\n        }\n      });\n      showingMenus.push(showingMenuGroup);\n      allMenus.push(allMenuGroup);\n      return;\n    }\n\n    const menuItem = item as IMenuItem;\n    const { path, isHomePage, showInSider = true, setContentLayout = true, exact = true, ...rest } = menuItem;\n    const fillDefaultValMenuItem = { ...rest, exact, path, isHomePage, showInSider, setContentLayout };\n    allMenus.push(fillDefaultValMenuItem);\n    path2menuItem[path] = fillDefaultValMenuItem;\n    if (isHomePage) {\n      path2menuItem['/'] = fillDefaultValMenuItem;\n      homePageFullPath = path;\n    }\n    if (showInSider) {\n      showingMenus.push(fillDefaultValMenuItem);\n    }\n  });\n  return { path2menuGroup, path2menuItem, homePageFullPath, showingMenus, allMenus };\n}\n\nlet homePageFullPath = '';\nlet path2menuItem: Record<string, IMenuItem> = {};\nlet path2menuGroup: Record<string, IMenuGroup> = {};\n// 保持层级结构的可展现的菜单，翻遍垂直或水平模式下不用判断showInSider条件，直接渲染\n// 因为水平下判断 showInSider 为false，返回无效节点会导致antd菜单组件报错\nlet showingMenus: Array<IMenuItem | IMenuGroup> = [];\nlet allMenus: Array<IMenuItem | IMenuGroup> = [];\n/** 打平后的菜单，方便构造路由组件 */\nlet flattedMenus: Array<IMenuItem> = [];\n\nexport function calcMenuData(menus: Array<IMenuItem | IMenuGroup>) {\n  const ret = calcMenus(menus);\n  path2menuItem = ret.path2menuItem;\n  path2menuGroup = ret.path2menuGroup;\n  showingMenus = ret.showingMenus;\n  allMenus = ret.allMenus;\n  homePageFullPath = ret.homePageFullPath;\n  flattedMenus = flatMenus(allMenus);\n}\n\nexport function getMenuData() {\n  return {\n    path2menuGroup,\n    path2menuItem,\n    homePageFullPath,\n    /** 辅助Sider组件，构造带层级关系的可展示菜单视图，注(指向的item数据也已经正确了填充了true默认值) */\n    showingMenus,\n    /** 所有的菜单，已正确填充了默认布尔值true的各个数据节点 */\n    allMenus,\n    flattedMenus,\n  };\n}\n","import { getBasename } from 'services/appPath';\nimport * as commonUtil from 'utils/common';\n\nconst pathName = (path: string) => {\n  // 本地加载时，根节点会挂载 RootRouter，无需拼接 basename 前缀\n  if (commonUtil.isLocalMode()) {\n    return path;\n  }\n  return `/${getBasename()}${path}`;\n};\n\nexport const DEMO = pathName('/demo');\n\nexport const DEMO_USE_SETUP = pathName('/demo-use-setup');\n\nexport const SIMPLE_LIST = pathName('/simple-list');\n\nexport const STEP_FORM = pathName('/step-form');\n","import * as routerPathCst from './routerPath';\nimport * as sysCst from './sys';\n\nexport const routerPath = routerPathCst;\nexport const sys = sysCst;\n\n","///////////////////////////////////////////////////////////////////\n//\n// appPath 依赖 appEnv，appPath 和 appEnv 需共同依赖 isProdEnv，估独立一个\n// 文件放此函数，避免循环依赖\n//\n///////////////////////////////////////////////////////////////////\nimport * as commonUtil from 'utils/common';\n\n\n/**\n * 判断是否是生产环境\n */\nexport function isProdEnv() {\n  if (commonUtil.isLocalMode()) return false;\n  const { hostname } = window.location;\n  if (hostname === 'xxx.yy.com') {\n    return true;\n  }\n  return false;\n}\n\nlet masterAppLoadedSetSignal: number = 0;\nexport function setMasterAppLoadedSignal() {\n  window.__MASTER_APP_LOADED__ = true;\n  masterAppLoadedSetSignal = 1;\n}\n\n/**\n * 是否是子应用\n * 子应用渲染时不渲染任何排版，仅挂载MainContent\n * @returns\n */\nexport function isSubApp() {\n  // 本地开发时，强制设置当前应用作为子应用来加载\n  if (process.env.REACT_APP_IS_SUB_APP === 'true') {\n    return true;\n  }\n  // 被设置过了，当前应用一定是主应用，主应用不包含任何业务pages，全靠SubAppLoader加载各个子应用\n  if (masterAppLoadedSetSignal !== 0) {\n    return false;\n  }\n  // __MASTER_APP_LOADED__ 已被主应用设置为true了，当前站点一定是子应用\n  if (window.__MASTER_APP_LOADED__ === true) {\n    return true;\n  }\n  return false;\n}\n","\n/**\n * delare module names in this file\n */\n\n// 用于处理分微前端场景，在动态加载新模块时，防止不同的子应用模块重复\n// 推荐起一个和当前子应用同名的名字\n// 如不需要前缀，这里写为 '' 即可\\\nexport const MOD_PREFIX = '' as const;\n\nconst modName = <T extends string>(name: T) => `${MOD_PREFIX}${name}` as `${typeof MOD_PREFIX}${T}`;\n\nexport const DEMO = 'Demo' as const;\nexport type T_DEMO = typeof DEMO;\n\nexport const DEMO_TODO_LIST = modName('DemoTodoList');\nexport type T_DEMO_TODO_LIST = typeof DEMO_TODO_LIST;\n\nexport const DEMO_CLONED = modName('DemoCloned');\nexport type T_DEMO_CLONED = typeof DEMO_CLONED;\n\nexport const COUNTER = modName('Counter');\nexport type T_COUNTER = typeof COUNTER;\n\nexport const HOME = modName('Home');\nexport type T_HOME = typeof HOME;\n\n// 接入申请页面\nexport const APPLY_CONFIG = modName('ApplyConfig');\nexport type T_APPLY_CONFIG = typeof APPLY_CONFIG;\n\n// 接入列表页面\nexport const APPLY_LIST = modName('ApplyList');\nexport type T_APPLY_LIST = typeof APPLY_LIST;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"general_button__enkDX\",\"textbox\":\"general_textbox__36LfG\",\"asyncButton\":\"general_asyncButton__1glvj general_button__enkDX\",\"normalButton\":\"general_normalButton__29Hta general_button__enkDX\"};","import { MetaItem } from '../type';\n\nexport function getInitMetaData(hasMoreMode = false, pageSize = 50) {\n  return {\n    lockId: 'init_lock', // 用于控制多个fetcher刷新同一个表格时，总是只认最近调用的那一个返回的数据\n    /** 是否处于 hasMore 模式 */\n    hasMoreMode,\n    hasMore: true,\n    current: 1,\n    pageSize,\n    total: 0,\n    list: [] as any[],\n    loading: false,\n  };\n}\n\nexport function getInitialState() {\n  return {\n    meta: { } as Record<string, MetaItem>,\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './meta';\n\n// only value change will triiger this function to execute again\nexport function doubleCount(newState: St) {\n  // use input newState to calculate new value\n}\n\n","import * as obj from 'utils/obj';\nimport { getInitMetaData } from './state';\nimport { IAC, St } from './meta';\n\nfunction getTableMeta(meta: any, tableId: string) {\n  return obj.safeGet(meta, tableId, getInitMetaData());\n}\n\nexport function modTableMeta({ tableId, toMod }: any, moduleState: St) {\n  const { meta } = moduleState;\n  const tableMeta = getTableMeta(meta, tableId);\n  if (obj.isValidVal(toMod.pageSize) && typeof toMod.pageSize !== 'number') {\n    toMod.pageSize = parseInt(toMod.pageSize, 10);\n  }\n  obj.safeAssign(tableMeta, toMod);\n  return { meta };\n}\n\n/** 处理页码变更 */\nexport async function handlePageCurrentChange({ current, tableId, fetchFn }: any, _: St, ctx: IAC) {\n  await ctx.dispatch(modTableMeta, { tableId, toMod: { loading: true, current, lockId: Date.now() } });\n  await ctx.dispatch(fetchTableData, { tableId, fetchFn });\n}\n\n/** 翻到下一页 */\nexport async function handleNextPage({ tableId, fetchFn }: any, { meta }: St, ctx: IAC) {\n  const { current } = getTableMeta(meta, tableId);\n  await ctx.dispatch(handlePageCurrentChange, { current: current + 1, tableId, fetchFn });\n}\n\n/** 处理一页展示条数的变更 */\nexport async function handlePageSizeChange({ tableId, pageSize, fetchFn }: any, _: St, ctx: IAC) {\n  await ctx.dispatch(modTableMeta, { tableId, toMod: { loading: true, pageSize, lockId: Date.now() } });\n  await ctx.dispatch(fetchTableData, { tableId, fetchFn });\n}\n\nexport function clearTable({ tableId }: any, m: St, ctx: IAC) {\n  ctx.dispatch(modTableMeta, {\n    tableId,\n    toMod: { list: [], total: 0, loading: false },\n  });\n}\n\nexport async function fetchTableData({ tableId, fetchFn }: any, moduleState: St, ctx: IAC) {\n  const { meta } = moduleState;\n  const { current, pageSize, lockId, list: oldList, hasMoreMode } = getTableMeta(meta, tableId);\n\n  const res = await fetchFn({ current, pageSize, list: oldList });\n  if (!res) {\n    await ctx.dispatch(modTableMeta, {\n      tableId,\n      toMod: { loading: false },\n    });\n    return;\n  }\n\n  const { pageList, page_list, total = 0, hasMore = true } = res;\n  const list = pageList || page_list || [];\n  if (getTableMeta(meta, tableId).lockId !== lockId) {\n    return; // lockId已不对，这是一个较老生成的lockId，放弃执行当前函数，不触发刷新表格\n  }\n\n  const start = (current - 1) * pageSize;\n  list.forEach((v: any, idx: number) => {\n    if (v) v.__seq = start + (idx + 1);\n  });\n\n  let targetList = list;\n  if (hasMoreMode) {\n    targetList = oldList.concat(list);\n  }\n\n  await ctx.dispatch(modTableMeta, {\n    tableId,\n    toMod: { list: targetList, total, hasMore, loading: false },\n  });\n}\n","\n/*\n|--------------------------------------------------------------------------\n| 定义模块的lifecyle\n|--------------------------------------------------------------------------\n| 文档:  https://concentjs.github.io/concent-doc/guide/concept-module-lifecycle\n*/\nimport { IDispatch } from 'concent';\n// import * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n// 模块被concent加载完毕时触发，(可替代initState，将初始化逻辑移到reducer文件里)\n// export function loaded(dispatch: IDispatch) {}\n\n// 当前模块的第一个组件实例挂载完毕时触发，\n// 默认只触发一次，如需满足条件反复触发，return false即可\n// 注意此函数触发时机和实例相关，如果没有任何属于此模块的组件实例化，该函数不会被触发\nexport function mounted(dispatch: IDispatch) {\n  // dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认只触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  // dispatch(reducer.clear);\n}\n","import { IModActionCtx, IRefCtxM, ReducerCallerParams, IReducerFn, IAnyObj } from 'concent';\nimport { makeUseModel, makeUseModelWithSetup, makeUseModelWithSetupCuf } from 'concent-utils';\n// import { RootState, RootCu } from 'types/store';\nimport state, { St as ModuleState } from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\nexport const moduleName = 'GeneralTable';\n\nexport const modelDesc = {\n  state,\n  computed,\n  reducer,\n  lifecycle,\n};\n\nexport const model = { [moduleName]: modelDesc };\n\nexport type ModelDesc = typeof modelDesc;\nexport type ModuleName = typeof moduleName;\nexport type CallerParams = ReducerCallerParams | [IReducerFn, any];\nexport type ReducerFn = IReducerFn;\nexport type St = ModuleState;\n// export type RootInfo = { state: RootState, computed: RootCu };\nexport type RootInfo = { state: {}, computed: {} };\n/** 用于描述 reducer 函数第3位参数 actionCtx 的类型 */\nexport type IAC = IModActionCtx<RootInfo, ModelDesc>;\nexport type CtxPre<RefCu = IAnyObj, Extra = IAnyObj> = IRefCtxM<RootInfo, IAnyObj, ModelDesc, RefCu, Extra>;\n\nexport const useModelWithSetup = makeUseModelWithSetup<RootInfo, ModelDesc>(moduleName);\nexport const useModelWithSetupCuf = makeUseModelWithSetupCuf<RootInfo, ModelDesc>(moduleName);\nexport const useModel = makeUseModel<RootInfo, ModelDesc>(moduleName);\n\nexport default model;\n","import modelDesc from './meta';\nimport { configure } from 'concent';\n\n/**\n * 使用 configure接口配置模块，此时不用在 src/models/index 里导出该模块到全局\n * 但是需要注意组件的 index文件 第一行代码写下\n * import './model';\n * 以便先触发模块配置过程后再安全的导入其他使用了该模块的组件\n * 如需在别的页面或者组件里可以使用名字配合 src/configs/useC2Mod \n * 函数来消费该模块的数据和调用该模块的方法，将模块提升到 src/models/index 文件导出即可\n */\nconfigure(modelDesc);\n\nexport default modelDesc;\n","/* eslint-disable no-underscore-dangle,no-param-reassign */\nimport './model';\nimport React, { Fragment } from 'react';\nimport { Table, Pagination, Button } from 'antd';\nimport { getInitMetaData } from './model/state';\nimport { CtxPre, useModelWithSetup } from './model/meta';\nimport * as t from './type';\n\nconst setup = (ctx: CtxPre) => {\n  const {\n    tid: tableId, fetchAfterMounted = true, hasMoreMode = false, fetchFn: propsFetchFn,\n    pageSizeOptions = ['50', '100', '200'],\n  } = ctx.props;\n  const { ccUniqueKey } = ctx;\n  if (!ctx.state.meta[tableId]) {\n    const pageSize = parseInt(pageSizeOptions[0], 10) || 50;\n    ctx.state.meta[tableId] = getInitMetaData(hasMoreMode, pageSize);\n  }\n\n  ctx.on(['refreshTable', tableId], async (fetchFn) => {\n    const _fetchFn = fetchFn || propsFetchFn;\n    await ctx.mr.clearTable({ tableId }, ccUniqueKey);\n    await ctx.mr.handlePageCurrentChange({ tableId, current: 1, fetchFn: _fetchFn }, ccUniqueKey);\n  });\n  ctx.on(['clearTable', tableId], () => {\n    ctx.mr.clearTable({ tableId }, ccUniqueKey);\n  });\n  ctx.on(['refreshTableCurPage', tableId], (fetchFn) => {\n    const _fetchFn = fetchFn || propsFetchFn;\n    const tableMeta = ctx.state.meta[tableId];\n    ctx.mr.handlePageCurrentChange({ tableId, current: tableMeta.current, fetchFn: _fetchFn }, ccUniqueKey);\n  });\n\n  ctx.effect(() => {\n    if (fetchAfterMounted) {\n      handlePageCurrentChange(1);\n    }\n    return () => ctx.dispatch('clearTable', { tableId }, ccUniqueKey);\n  }, []);\n\n  const handlePageCurrentChange = (current: number) => {\n    // 触发 handelPageSizeChange 时，同时也会触发 handlePageCurrentChange，这里做个判断，避免冗余请求\n    if (ctx.state.meta[tableId].current === current) return;\n    const { fetchFn } = ctx.props;// fetchFn有可能会变，这里每次取最新的\n    ctx.mr.handlePageCurrentChange({ tableId, current, fetchFn }, ccUniqueKey)\n  };\n  const handelPageSizeChange = (page: number, pageSize: number) => {\n    const { fetchFn } = ctx.props;\n    ctx.mr.handlePageSizeChange({ tableId, pageSize, fetchFn }, ccUniqueKey);\n  };\n  const handleNextPage = () => {\n    const { fetchFn } = ctx.props;\n    ctx.mr.handleNextPage({ tableId, fetchFn }, ccUniqueKey);\n  };\n\n  return {\n    handlePageCurrentChange,\n    handelPageSizeChange,\n    handleNextPage,\n    pageSizeOptions,\n  };\n};\n\nexport type Props = t.Props;\nexport type FetchFn = t.FetchFn;\nexport type FetchFnParams = t.FetchFnParams;\n\n/**\n * #################[Code example]#####################\n * ```js\n *  const fetcher = ()=> xxxService.fetchData();\n *  <GeneralTable tid=\"xxxId\" fetchFn={fetcher} columns={yourColumnsDef} />\n * ```\n * ####################################################\n */\nexport function GeneralTable(props: t.Props) {\n  const { state, settings } = useModelWithSetup(setup, { props });\n  const {\n    tid, columns, rowKey = 'id', scroll = { x: '100%' }, hasMoreMode = false,\n    disableBtnWhenNoMore, size,\n  } = props;\n  const { list, loading, current, total, pageSize, hasMore } = state.meta[tid];\n  const { handelPageSizeChange, handlePageCurrentChange, handleNextPage, pageSizeOptions } = settings;\n\n  const renderBtn = () => {\n    if (disableBtnWhenNoMore && !hasMore) return <Button disabled style={{ width: '100%' }}>没有更多了</Button>;\n    return <Button onClick={handleNextPage} style={{ width: '100%' }}>加载更多</Button>;\n  };\n\n  // console.log(`%c@@@ GeneralTable ${props.tid}`, 'color:red;border:1px solid red;');\n  return (\n    <Fragment>\n      <Table rowKey={rowKey} columns={columns} dataSource={list} size={size}\n        loading={loading} pagination={false} scroll={scroll}\n      />\n      <div style={{ height: '19px', width: '100%' }} />\n      {hasMoreMode\n        ? renderBtn()\n        : (\n          <Pagination onShowSizeChange={handelPageSizeChange} onChange={handlePageCurrentChange}\n            current={current} total={total} showSizeChanger pageSizeOptions={pageSizeOptions}\n            pageSize={pageSize}\n          />\n        )\n      }\n    </Fragment>\n  );\n}\n\nexport default React.memo(GeneralTable);\n","/**\n * concent 相关的一些公共封装函数\n */\nimport {\n  useConcent, reducer, getState as getSt, getGlobalState as getGst, emit, getComputed,\n  IActionCtxBase, cst, MODULE_DEFAULT, MODULE_GLOBAL,\n  ICtxBase, IAnyObj, SettingsType, ComputedValType, SetupFn, MultiComputed, CallTargetParams,\n} from 'concent';\nimport { noop } from 'utils/fn';\nimport { CtxM, CtxMConn, CtxConn, Modules, RootRd, RootState, RootCu } from 'types/store';\nimport { EvMap } from 'types/eventMap';\n\nfunction priBuildCallParams(moduleName: Modules, connect: Array<Modules>, options?: Options<any, any, any, any, any, any>) {\n  const targetOptions = options || {};\n  const { setup, tag, extra, staticExtra, cuDesc, passCuDesc = true, props = {}, ccClassKey } = targetOptions;\n  const regOpt = { module: moduleName, connect, setup, props, tag, extra, staticExtra, cuDesc: null as any };\n  if (passCuDesc) regOpt.cuDesc = cuDesc;\n  return { regOpt, ccClassKey };\n}\n\n/**\n * 调用目标函数，用于对接 reducer里的 ghost函数\n * @param callerParams\n * @param ac\n */\nexport async function callTarget<T extends any = any>(callerParams: CallTargetParams, ac: IActionCtxBase, errHandler?: (err: Error) => void): Promise<T> {\n  let ret: T = {} as any;\n  try {\n    // 支持 reducer文件里内部调用 ac.dispatch(loading, fnPayload(targetFn, payload))\n    if (Array.isArray(callerParams)) {\n      ret = await Function.prototype.apply.call(ac.dispatch, ac, callerParams);\n    } else {\n      const { fnName, payload, renderKey, delay } = callerParams;\n      ret = await ac.dispatch(fnName, payload, renderKey, delay) as unknown as any;\n    }\n  } catch (err) {\n    if (errHandler) errHandler(err);\n    throw err;\n  }\n  return ret;\n}\n\nexport interface ValidSetup {\n  (ctx: ICtxBase): IAnyObj | void;\n}\nexport interface ValidMapProps {\n  (ctx: ICtxBase): IAnyObj;\n}\nexport interface OptionsBase<\n  P extends IAnyObj,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > {\n  props?: P;\n  tag?: string;\n  ccClassKey?: string;\n  extra?: Extra;\n  staticExtra?: StaticExtra;\n  /**\n   * 一个遗留的参数，对接useConcent的mapProps，每一轮渲染都会调用，返回结果可通过 ctx.mapped拿到\n   */\n  mapProps?: Mp;\n  cuDesc?: CuDesc;\n  /**\n   * 是否透传 cuSpec 给 useConcent函数，默认为true，\n   * 表示需要透传，此时用户不需要再setup函数体内调用 ctx.computed(cuSpec)\n   * 如果用户设置passCuSpec为false，表示传入 cuSpec 仅为了方便推导出refComputed类型，但不透传 cuSpec 给 useConcent函数\n   * 注意此时用户需要在 setup函数体内调用 ctx.computed(cuSpec) 来完成示例计算函数的定义，\n   * 否则 refComputed 里拿不到真正的计算结果\n   */\n  passCuDesc?: boolean;\n}\nexport interface Options<\n  P extends IAnyObj,\n  Setup extends ValidSetup,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > extends OptionsBase<P, CuDesc, Extra, StaticExtra, Mp> {\n  setup?: Setup;\n}\n\n/**\n * 属于某个模块\n * use the target model context you want by passing a module name\n * 如需要全局任意地方可通过 useC2Mod('xx') 导出xx模块上下文来使用，\n * 需要在 src/models/index.js 显式的导出该模块\n *\n * -----------------------[Export example]-----------------------\n * ```js\n * import somePageModel from 'pages/SomePage/model';\n * import someCompModel from 'components/SomeComp/model';\n * const allModels = {...somePageModel,  ...someCompModel};\n * ```\n * ---------------------------------------------------------------\n *\n * 各种调用示例：\n * 需自己跳转到 components/_demosOfHook/useC2Mod 文件里查看\n * @see {useC2ModDemos.Example} - 简单示例\n * @see {useC2ModDemos.ExampleCallMr} - 调用moduleReducer\n * @see {useC2ModDemos.ExampleReadMcu} - 读取模块计算结果\n * @see {useC2ModDemos.ExampleSetup} - 配置setup\n * @see {useC2ModDemos.ExampleRefCu} - 定义实例计算\n * @param moduleName\n * @param options {Options} - 可选参数，见 Options定义\n */\nexport function useC2Mod<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 使用默认模块（在没有重写$$default模块的情况下，默认模块是一个空模块）\n * @param options\n * @returns\n */\nexport function useC2DefaultMod<\n  Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], options);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 属于某个模块，连接多个模块\n */\nexport function useC2ModConn<\n  M extends Modules, Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, connect, options);\n  type Ctx = CtxMConn<P, M, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 连接多个模块\n * ```js\n *  const { connectedState, cr } = useC2Conn(['mod1', 'mod2']);\n *  // connectedState.mod1.stateXxx\n *  // cr.mod1.methodXxx\n *\n * ```\n */\nexport function useC2Conn<\n  Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, connect, options);\n  type Ctx = CtxConn<P, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 适用于不属于任何模块，只是设置setup函数的场景\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetup<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const { settings } = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return settings;\n}\n\n/**\n * useSetupCtx 会返回整个ctx对象，区别于 useSetup 只返回 settings\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetupCtx<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const ctx = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return ctx;\n}\n\n\n/**\n * 为属于某个模块的 ctx 标记类型, 通常使用在class成员变量上 和 setup函数体内\n * 在class组件成员变量使用时不需要传递第三位参数ctx，组件实例化时会由concent注入并替换\n * 在setup函数里使用时，可直接传入已经创建好的ctx\n */\nexport function typeCtxM<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>, ctx?: any) {\n  noop(moduleName, options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return (ctx || {}) as Ctx;\n}\n\n/**\n * useC2Mod的工厂函数，返回钩子函数的同时，也提供了帮助推导setup函数的ctx参数类型的辅助函数\n * 注意! 此工厂函数仅适用于 setup函数ctx参数不需要感知 props, extra 类型时，方可使用\n * @param moduleName\n * @param options\n * -----------------------[Code example]-----------------------\n * ```js\n *  const ret = makeUseC2Mod(\"Counter\");\n *   function setupA1(c: any) {\n *    const ctx = ret.typeCtx(c);\n *     const cu = ctx.computed({countX6: (n) => n.value * 6 });\n *     return { cu };\n *   }\n *   export function UseC2ModByFactory() {\n *     const ctx = ret.useC2Mod({ setup: setupA1 });\n *     return <h1>{ctx.state.bigValue} {ctx.settings.cu.countX6}</h1>\n *   }\n * ```\n * --------------------------------------------------------------\n */\nexport function makeUseC2Mod<M extends Modules>(moduleName: M) {\n  return {\n    /**\n     * 需要传入的 setup 函数\n     */\n    useC2Mod: <Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n      Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n      >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) => {\n      const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n      type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n      return useConcent<P, Ctx>(regOpt, ccClassKey);\n    },\n    /**\n     * 推导setup函数的ctx参数类型\n     */\n    typeCtx: (ctx: ICtxBase) => {\n      return ctx as CtxM<{}, M>;\n    },\n  };\n}\n\nexport const ccReducer = (reducer as unknown) as RootRd;\n\n/**\n * 获取 global模块的状态\n * 在已拥有 concent model 上下文、action 上下文的地方，\n * 推荐直接获取，代替调用此函数，因为直接获取数据时组件并不会订阅数据变化\n */\nexport function getGlobalState() {\n  const globalState = getGst<RootState>();\n  return globalState;\n}\n\n/**\n * 获取整个根状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getRootState() {\n  const rootState = getSt<RootState>();\n  return rootState;\n}\n\n/**\n * 获取目标模块状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getModelState<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelState = getSt<RootState, T>(modelName);\n    return modelState;\n  }\n  throw new Error('miss modelName');\n}\n\n/**\n * 获取目标模块状态\n */\nexport function getModelComputed<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelComputed = getComputed<RootCu, T>(modelName);\n    return modelComputed;\n  }\n  throw new Error('miss modelName');\n}\n\n/**\n * 获取 global模块的状态\n * 在已拥有 concent model 上下文、action 上下文的地方，\n * 推荐直接获取，代替调用此函数，因为直接获取数据时组件并不会订阅数据变化\n */\nexport function getGlobalComputed() {\n  const globalComputed = getComputed<RootCu, MODULE_GLOBAL>(cst.MODULE_GLOBAL);\n  return globalComputed;\n}\n\ntype EvKeys = keyof EvMap;\n/**\n * 发射事件\n * @param eventName - 事件名\n * @param args\n */\nexport function ccEmit<E extends EvKeys, T extends EvMap[E]>(eventName: E, ...args: T) {\n  emit(eventName, ...args);\n}\n\n/**\n * 携带id的发射事件\n * @param eventDesc - [eventName, id]\n * @param args\n */\nexport function ccEmitId<E extends EvKeys, T extends EvMap[E]>(eventDesc: [E, string], ...args: T) {\n  emit(eventDesc, ...args);\n}\n\ntype OnFn = <E extends EvKeys>(eventName: E, cb: (...args: EvMap[E]) => void) => void;\n/**\n * 配合EvMap，为ctx.on装配类型\n * 外部调用时传入具体的事件名就推导出cb函数的参数列表类型\n *\n    function setup(ctx: Ctx){\n      const on = ctxOn(ctx);\n      on('xxx',(a, b)=>{\n       // 此处ts能感知a、b的具体类型\n      })\n    }\n */\nexport function ctxOn(ctx: ICtxBase) {\n  return ctx.on as OnFn;\n}\n\ntype OnIdFn = <E extends EvKeys>(eventDesc: [E, string], cb: (...args: EvMap[E]) => void) => void;\n/**\n * 可以携带id的ctx.on\n * @param ctx\n */\nexport function ctxOnId(ctx: ICtxBase) {\n  return ctx.on as OnIdFn;\n}\n","import React from 'react';\nimport { EmptyView } from 'components/dumb/general';\nimport { useC2DefaultMod } from 'services/concent';\n\ninterface IProps {\n  /** auth id */\n  authId: string | number;\n  children: React.ReactElement;\n}\n\n// React.PropsWithChildren<IProps>\nfunction AuthView(props: IProps): React.ReactElement {\n  const ctx = useC2DefaultMod();\n  const { globalState: { authIds } } = ctx;\n\n  if (authIds.includes(`${props.authId}`)) return props.children;\n  return <EmptyView />;\n}\n\nexport default React.memo(AuthView);\n\n","import React from 'react';\nimport { Chart } from '@antv/g2';\n\nconst getChart = (data: any) => {\n  const chart = new Chart({\n    container: 'container',\n    autoFit: true,\n    height: 500,\n  });\n  chart.data(data);\n  chart.scale('value', {\n    alias: '销售额(万)',\n    nice: true,\n  });\n  chart.axis('time', {\n    tickLine: null\n  });\n\n  chart.tooltip({\n    showMarkers: false\n  });\n  chart.interaction('active-region');\n\n  chart.interval().position('time*value')\n    .style('time', val => {\n      if (val === '13:00-14:00') {\n        return {\n          fillOpacity: 0.4,\n          lineWidth: 1,\n          stroke: '#636363',\n          lineDash: [3, 2]\n        }\n      }\n      return {\n        fillOpacity: 1,\n        lineWidth: 0,\n        stroke: '#636363',\n        lineDash: [3, 2]\n      };\n    });\n\n  chart.render();\n  return chart;\n}\n\nexport default function (props: { data: any[] }) {\n  const chartInfo = React.useRef<{ ins: Chart | null }>({ ins: null });\n  React.useEffect(() => {\n    let ins = chartInfo.current.ins;\n    if (!ins) {\n      ins = getChart(props.data);\n      chartInfo.current.ins = ins;\n    } else {\n      ins.changeData(props.data);\n    }\n  }, [props.data]);\n  React.useEffect(() => {\n    let ins = chartInfo.current.ins;\n    return () => { ins && ins.destroy() };\n  }, []);\n  return <div id=\"container\" style={{ width: '70%', height: '300px' }}></div>\n}\n","import React from 'react';\nimport { Button, Card, Row, Col, Tooltip, Radio, RadioChangeEvent } from 'antd';\nimport { GithubOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { history } from 'react-router-concent';\nimport { routerPath } from 'configs/constant';\nimport { TopHeaderTypes, TopNavBarTypes, SiderViewTypes } from 'configs/constant/sys';\nimport * as mods from 'configs/c2Mods';\nimport { useC2Mod, typeCtxM } from 'services/concent';\nimport { VerticalBlank, AsyncButton, Blank } from 'components/dumb/general';\nimport { AuthView } from 'components';\nimport Bar from 'components/Charts/Bar';\n\nconst layoutOptions = [\n  { label: '折叠边栏，仅显示快捷导航条', value: '1' },\n  { label: '展开边栏，仅显示快捷导航条', value: '2' },\n  { label: '隐藏边栏，显示顶栏信息和快捷导航条', value: '3' },\n];\n\nfunction setup(c: any) {\n  const ctx = typeCtxM(mods.HOME, {}, c);\n  const { effect, gr, globalState } = ctx;\n  effect(() => {\n    const t = setInterval(ctx.mr.ranBarData, 3000);\n    return () => clearInterval(t);\n  }, []);\n\n  return {\n    changeTopViewType(e: RadioChangeEvent) {\n      const layout = e.target.value;\n      const argMap: Record<string, [SiderViewTypes, TopHeaderTypes, TopNavBarTypes]> = {\n        1: [SiderViewTypes.COLLAPSED, TopHeaderTypes.HIDDEN, TopNavBarTypes.FIXED],\n        2: [SiderViewTypes.NOT_COLLAPSED, TopHeaderTypes.HIDDEN, TopNavBarTypes.FIXED],\n        3: [SiderViewTypes.HIDDEN, TopHeaderTypes.FIXED, TopNavBarTypes.FIXED],\n      };\n      const [siderViewType, topHeaderType, topNavBarType] = argMap[layout];\n      gr.setState({ siderViewType, topHeaderType, topNavBarType });\n    },\n    addAuthId() {\n      const { authIds } = globalState;\n      if (!authIds.includes('key_1')) {\n        authIds.push('key_1');\n        gr.setState({ authIds });\n      }\n    },\n    delAuthId() {\n      const { authIds } = globalState;\n      if (authIds.indexOf('key_1') >= 0) {\n        authIds.splice(authIds.indexOf('key_1'), 1);\n        gr.setState({ authIds });\n      }\n    },\n  };\n}\n\nfunction Home(props: RouteComponentProps) {\n  const { state: homeState, mr: homeMr, settings: se } = useC2Mod(mods.HOME, { setup });\n  const { state, mr } = useC2Mod(mods.COUNTER);\n\n  return (\n    <div style={{ paddingTop: '15px' }}>\n      <Row>\n        <Col>\n          <AsyncButton>欢迎了解与使用 Concent-pro</AsyncButton>\n        </Col>\n        <Col>\n          <a style={{ marginLeft: '12px' }} href=\"https://github.com/tnfe/concent-pro\" target=\"blank\">\n            <GithubOutlined style={{ fontSize: '52px' }} />\n          </a>\n        </Col>\n      </Row>\n      <VerticalBlank height=\"32px\" />\n      <AuthView authId=\"key_1\"><h1>you can not see me if you have not auth</h1></AuthView>\n      <Button type=\"primary\" onClick={se.addAuthId}>\n        点击此按钮，将看到一个带权限控制的视图\n      </Button>\n      <Blank />\n      <Button type=\"primary\" onClick={se.delAuthId}>\n        移出权限\n      </Button>\n      <VerticalBlank height=\"32px\" />\n      <div>\n        <Tooltip title=\"更多布局点击右上角设置按钮查看\">\n          <span>选择一个喜欢的布局吧<QuestionCircleOutlined /> : </span>\n        </Tooltip>\n        <Blank />\n        <Radio.Group options={layoutOptions} onChange={se.changeTopViewType} />\n      </div>\n      <VerticalBlank height=\"32px\" />\n      <Button type=\"primary\" onClick={() => history.push(`/counter?a=${Date.now()}`)}>\n        跳转到一个带随机参的Counter页面\n      </Button>\n      <VerticalBlank height=\"32px\" />\n      <Row>\n        <Col span=\"8\">\n          <Card\n            onClick={() => history.push(routerPath.SIMPLE_LIST)}\n            hoverable\n            style={{ width: '80%' }}\n            cover={<img alt=\"example\" src=\"https://t7.baidu.com/it/u=1956604245,3662848045&fm=193&f=GIF\" />}\n          >\n            <Card.Meta title=\"访问demo\" description=\"提供xxx等功能\" />\n          </Card>\n        </Col>\n        <Col span=\"8\">\n          <Card\n            onClick={() => history.push(routerPath.STEP_FORM)}\n            hoverable\n            style={{ width: '80%' }}\n            cover={<img alt=\"example\" src=\"https://t7.baidu.com/it/u=2763645735,2016465681&fm=193&f=GIF\" />}\n          >\n            <Card.Meta title=\"访问分步表单\" description=\"快速创建xx业务\" />\n          </Card>\n        </Col>\n      </Row>\n      <VerticalBlank height=\"32px\" />\n      <h3>mods.COUNTER.state.value {state.value}</h3>\n      <Button onClick={mr.increment}>change value</Button>\n      <VerticalBlank height=\"32px\" />\n      <Button type=\"primary\" onClick={homeMr.ranBarData}>ran bar data</Button>\n      <VerticalBlank height=\"32px\" />\n      <Bar data={homeState.barData} />\n    </div>\n  );\n}\n\nexport default React.memo(Home);\n\n","\n/**\n * 应用左侧的导航栏配置\n */\nimport { lazy } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  FormOutlined, OrderedListOutlined, PlusCircleOutlined, RightCircleOutlined,\n} from '@ant-design/icons';\nimport { routerPath } from './constant';\nimport { isLocalMode } from 'utils/common';\nimport HomePage from 'pages/Home';\n// const HomePage = lazy(() => import('pages/Home'));\n\nexport interface IMenuItem {\n  /**\n   * 路由组件对应的权限id，如果配置了此值，且 globalState.authIds 不包含这个值，会被渲染为 NotAuth组件\n   * 修改 models/global/reducer.ts 的 prepareApp 逻辑填充 authIds 数据\n   */\n  authId?: string;\n  path: string;\n  extraData?: Record<string, any>;\n  /** default: true */\n  exact?: boolean;\n  /**\n   * 默认值：true，\n   * 是否在边栏里展示，\n   * 为false时，只是菜单里看不到入口了，通过路由依然能访问\n   */\n  showInSider?: boolean;\n  /**\n   * 菜单对应的页面组件\n   */\n  Component: React.ComponentType<any>;\n  /**\n   * 路由对应的实际组件挂载前执行的逻辑\n   * 如果返回了具体的组件片段，则会替换掉改路由对应的实际组件\n   * 通常的使用场景:\n   * 1 提奖将路由信息写入某个store，子组件渲染时能够及时拿到\n   * 2 判断某些条件，不成立的话，不挂载目标路由组件，替换为该函数返回的视图片段\n   */\n  beforeComponentMount?: (props: RouteComponentProps) => React.ReactNode | void;\n  /**\n   * 默认值：true\n   * 页面组件是否包一层统一的默认布局组件\n   */\n  setContentLayout?: boolean;\n  label: string;\n  Icon?: React.SFC<{ style?: React.CSSProperties }>;\n  /** 默认 false，是否是首页，匹配路径 / 时也能访问 */\n  isHomePage?: boolean;\n}\nexport interface IMenuGroup {\n  /** 用于辅助计算 menu是否展开 */\n  key: string;\n  label: string;\n  Icon?: React.SFC<{ style?: React.CSSProperties }>;\n  children: IMenuItem[];\n}\n\nconst showUnderLocalMode = isLocalMode();\n\nconst menus: Array<IMenuItem | IMenuGroup> = [\n  {\n    Icon: FormOutlined,\n    label: '首页',\n    path: routerPath.DEMO,\n    Component: HomePage,\n    isHomePage: true,\n  },\n  {\n    key: 'listExamples',\n    label: 'list示例集合',\n    Icon: OrderedListOutlined,\n    children: [\n      {\n        Icon: FormOutlined,\n        label: '简单列表',\n        path: routerPath.SIMPLE_LIST,\n        Component: lazy(() => import('pages/TodoList')),\n      },\n      {\n        showInSider: showUnderLocalMode,\n        label: 'todoList',\n        path: '/todolist',\n        Component: lazy(() => import('pages/TodoList')),\n      },\n    ]\n  },\n  {\n    label: 'template',\n    path: '/template',\n    Component: lazy(() => import('pages/_Demos/Template')),\n  },\n  {\n    label: '计数器',\n    path: '/counter',\n    Icon: PlusCircleOutlined,\n    Component: lazy(() => import('pages/Counter')),\n  },\n  {\n    label: '计数器2',\n    path: '/counter2',\n    Icon: PlusCircleOutlined,\n    setContentLayout: false,\n    Component: lazy(() => import('pages/Counter')),\n  },\n  {\n    label: '分步表单',\n    path: routerPath.STEP_FORM,\n    Component: lazy(() => import('pages/AStepForm')),\n  },\n  {\n    Icon: RightCircleOutlined,\n    label: 'useSetup',\n    path: routerPath.DEMO_USE_SETUP,\n    Component: lazy(() => import('pages/_Demos/SomeComponent/UseSetup')),\n  },\n];\n\nexport default menus;\n","/**\n * 基座app才需要执行此逻辑，动态的确定边栏导航模样\n */\nimport { calcMenuData } from '../derived/menus';\nimport menus from '../menus';\n// import { isSubApp } from 'services/appEnv';\n// import convertToMenus from './convertToMenus';\n// import menusConf from '../menusConf';\n\n\nexport default async function () {\n  // todo for hub-app: fetch remote menu data\n  // const rawMenuData = convertToMenus(menusConf.data);\n  // calcMenuData(rawMenuData);\n\n  // 如不需要此功能，加载本地配置的菜单即可\n  calcMenuData(menus);\n}\n","\nexport const siderWidth = 200;\nexport const siderWidthPx = `${siderWidth}px`;\n/** 最底层的背景色 */\nexport const buttomBgColor = '#f0f2f5';\nexport const contentBgColor = '#fff';\nexport const siteThemeColor = '#1976d2';\n/** 水印文案 */\nexport const waterMarkLabel = 'concent-pro';\n\nconst img1 = 'https://raw.githubusercontent.com/fantasticsoul/assets/master/c2pro/c2pro-banner.png';\n// 展开时两种主题色的logo长图设置，可按实际情况填写不同的url，如无素材填写0长字符串，保证 notCollapsedLogoLabel 有文案即可\n/** 展开时浅色主题长图 */\nexport const notCollapsedLogoImg = img1;\n/** 展开时深色主题长图 */\nexport const notCollapsedLogoImgOfDark = img1;\n/** 无 notCollapsedLogoImg 或 notCollapsedLogoImgOfDark 时，系统兜底采用的短文案，用于折叠边栏时显示 */\nexport const notCollapsedLogoLabel = 'xxx系统';\n\nconst img2 = 'https://raw.githubusercontent.com/fantasticsoul/assets/master/c2pro/short_logo.png';\n// 折叠时两种主题色的logo短图设置，可按实际情况填写不同的url，如无素材填写0长字符串，保证 collapsedLogoLabel 有文案即可\n/** 折叠时浅色主题短图 */\nexport const collapsedLogoImg = img2;\n/** 折叠时深色主题短图 */\nexport const collapsedLogoImgOfDark = img2;\n/** 无 collapsedLogoImg 或 collapsedLogoImgOfDark 时，系统兜底采用的短文案，用于折叠边栏时显示 */\nexport const collapsedLogoLabel = '酷炫';\n\nexport const img404 = '404_img_url';\nexport const img403 = '403_img_url';\n\nexport const LS_C2PRO_SETTINGS = 'C2ProSettings';\nexport const LS_C2PRO_SETTINGS_VER = 'C2ProSettingsVer';\n\nexport enum TopHeaderTypes {\n  FIXED = '1',\n  FLOWED = '2',\n  HIDDEN = '3',\n};\n\nexport enum TopNavBarTypes {\n  FIXED = '1',\n  FLOWED = '2',\n  HIDDEN = '3',\n};\n\nexport enum SiderViewTypes {\n  COLLAPSED = '1',\n  NOT_COLLAPSED = '2',\n  HIDDEN = '3',\n};\n\nexport enum SiteColorTypes {\n  /** 正常模式 */\n  NORMAL = '1',\n  /** 黑白模式（哀悼模式） */\n  GREY = '2',\n  /** 暗黑模式 */\n  DARK = '3',\n}\n\nexport enum SiderLogoTypes {\n  IMG_AND_LABEL = '1',\n  IMG = '2',\n};\n\nexport enum LoginStatus {\n  LOGGING = '1',\n  LOGIN_FAILED = '2',\n  LOGIN_SUCCESS = '3',\n}\n","\nexport function isLocalMode() {\n  return window.location.port !== '';\n}\n"],"sourceRoot":""}