{"version":3,"sources":["services/appPath.ts","configs/subApp.ts","utils/obj.ts","services/message.ts","configs/derived/menus.ts","utils/timer.ts","services/appEnv.ts","configs/constant/routerPath.ts","configs/constant/index.ts","services/appEnvBase.ts","configs/c2Mods.ts","utils/regs.ts","services/staff.ts","pages/Home/model/state.ts","pages/Home/model/computed.ts","pages/Home/model/reducer.ts","utils/num.ts","pages/Home/model/lifecycle.ts","pages/Home/model/index.ts","services/color.ts","models/global/state.ts","models/global/reducer.ts","models/global/computed.ts","models/global/lifecycle.ts","models/global/watch.ts","models/global/index.ts","models/counter/computed.ts","models/counter/reducer.ts","models/counter/lifecycle.ts","models/counter/index.ts","models/counter/state.ts","models/todolist/state.ts","models/todolist/computed.ts","utils/url.ts","services/http.ts","services/domain/todo.ts","models/todolist/reducer.ts","models/todolist/lifecycle.ts","models/todolist/index.ts","models/_demo/reducer.ts","models/_demo/computed.ts","models/_demo/lifecycle.ts","models/_demo/index.ts","models/_demo/state.ts","models/index.ts","configs/runConcent.ts","services/concent.ts","configs/constant/sys.ts","utils/common.ts"],"names":["localStorage","getItem","getBasename","window","location","hostname","pathname","commonUtil","toLocaleLowerCase","includes","appEnvBase","split","getRelativeRootPath","hash","basename","targetPathname","startsWith","extractPathAndSearch","substr","path","startIdx","length","getSearchPath","search","pathMayIncludeSearch","firstQuestionIdx","indexOf","stringMyStartsWithQuestion","substring","ensureNoStartQuestion","okeys","map","Object","keys","isValidVal","val","undefined","isObject","allowArr","Array","isArray","safeGet","obj","key","defaultValue","item","safeAssign","toMod","forEach","safeParse","jsonStr","errMsg","JSON","parse","err","Error","isNull","value","nullDef","nullValues","checkObjValues","emptyObjIsNull","emptyArrIsNull","inNullValues","keyLen","allIsNull","i","subValue","isDepthLargeThan","toCompare","depthRecorder","num","tryDetectObjDepth","curDepth","newDepth","getObjDepth","decideVal","firstVal","secondVal","inEnum","enumObj","values","key2tipTimer","validMethods","_callMessageMethod","method","cb","content","displayDuration","noDupDuration","console","error","message","setTimeout","Promise","resolve","success","warn","homePageFullPath","path2menuItem","path2menuGroup","showingMenus","allMenus","flattedMenus","calcMenuData","menus","ret","groupItem","children","rest","showingMenuGroup","allMenuGroup","childItem","showInSider","setContentLayout","exact","fillDefaultValChildItem","push","isHomePage","menuItem","fillDefaultValMenuItem","calcMenus","flatted","pushToFlatted","flatMenus","getMenuData","delay","ms","r","setMasterAppLoadedSignal","isSubApp","pathName","DEMO","DEMO_USE_SETUP","SIMPLE_LIST","STEP_FORM","routerPath","routerPathCst","sys","sysCst","isProdEnv","masterAppLoadedSetSignal","__MASTER_APP_LOADED__","process","REACT_APP_IS_SUB_APP","modName","name","COUNTER","HOME","regs","getStaffList","initData","searchUsers","toMatchStr","slice","pattern","RegExp","filter","rtxname","test","debounce","getInitialState","bigValue","barData","doubleCount","forCopy","payload","moduleState","ac","log","setState","incrementBigValue","increment","decrement","incrementByAmount","amount","incrementAsync","a","foo","ranBarData","p","fill","v","idx","time","seed","Math","floor","random","clear","mounted","dispatch","reducer","willUnmount","state","computed","lifecycle","privSetColor","document","documentElement","style","setProperty","hex2rgbString","hexColor","rgb","Color","object","hex2rgb","g","b","getThemeColorLight","lighten","c","themeColorLight","hex","changeFontAlpha","alpha","themeColor","siteThemeColor","themeColorRGB","colorServ","defaultState","activeRoutePaths","curActiveRoutePath","siteColorType","SiteColorTypes","NORMAL","allowWaterMark","curActiveRouteFullPath","isTabPaneHeavyBg","fontAlpha","topHeaderType","TopHeaderTypes","HIDDEN","topNavBarType","TopNavBarTypes","FIXED","siderViewType","SiderViewTypes","COLLAPSED","siderLogoType","SiderLogoTypes","IMG_AND_LABEL","siderViewToCollapsedTime","siderViewTypeBackup","settingDrawerVisible","siderTheme","headerTheme","isUsingDefaultThemeColor","custThemeColor","someInfo","loginStatus","LoginStatus","LOGGING","loginBtnLoading","isAppReady","userName","userIcon","isAdmin","authIds","isInnerMock","excludedMockApis","isKeyVerEqual","LS_C2PRO_SETTINGS_VER","setItem","needCachedSettings","cachedSettings","LS_C2PRO_SETTINGS","final","validActiveRoutePaths","NOT_COLLAPSED","fakeLoginData","token","isLogin","toggleCollapsedBtn","Date","now","changeIsUsingDefaultTheme","checked","changeThemeColor","addActiveRoutePath","newFullPath","toSet","find","delActiveRoutePath","targetRoutePath","findIndex","toDelPath","splice","firstPath","toggleSiderVisible","changeSiderViewType","setCustThemeColor","changeIsTabPaneHeavyBg","switchSiderTheme","switchHeaderTheme","changeIsInnerMock","loginByCookie","loginDeadline","parseInt","loginData","LOGIN_SUCCESS","LOGIN_FAILED","loginByPassword","pwd","msgServ","String","logout","th","tn","siderWidthPx","collapsedLogoImg","collapsedLogoImgOfDark","collapsedLogoLabel","notCollapsedLogoImg","notCollapsedLogoImgOfDark","notCollapsedLogoLabel","viewType2LeftValue","logoKey2ImgUrlList","light","dark","paddingTopMap","FLOWED","headerStyleMap","zIndex","position","left","right","marginTop","display","navBarStyleMap","top","isHeaderAboveNavBar","n","contentLayoutStyle","paddingTop","marginLeft","minHeight","overflowX","headerStyle","toReturn","backgroundColor","color","quickNavBarStyle","boxSizing","paddingLeft","siderStyle","width","iconCtrl","showInHeader","showInBar","showInBody","logoCtrl","showLabel","label","imgUrl","shortWidth","themeValue","imgUrlList","siderInfo","iconDes","isUnfold","showSider","siderThemeSwitchChecked","headerThemeSwitchChecked","navBarItemCls","loaded","rd","staffServ","settingsKeyChange","defWatch","o","f","isFirstCall","str","stringify","immediate","watchDarkSiteChange","newFilter","DARK","GREY","htmlDom","querySelector","watch","incrementOne","decrementOne","toInc","incBy","keyword","formattedInput","purify","url","cute","setConfig","retryCount","timeout","generalOptions","headers","withCredentials","mockData","seperateOptions","options","returnLogicData","check","alertErrorMsg","failStrategy","const","KEEP_ALL_BEEN_EXECUTED","bizServiceName","cuteOptions","logicOptions","checkCode","axiosReply","checkOptions","statusCode","httpResponse","data","status","response","code","msg","attachPrefixAndData","pureUrl","replace","prefixedUrl","objUtil","dataQueryStr","qs","handleError","messageService","sendRequest","mergedOpt","c2Serv","getRealReply","reply","mockImpl","timerUtil","fakeHttp","hasMockedFn","urlUtil","mockResult","body","sendXForm","xFormOptions","_data","urls","_urls","multiGet","replyList","items","multiPost","finalUrl","formData","FormData","prototype","hasOwnProperty","call","File","append","appendVal","instance","axios","create","post","downloadFile","form","createElement","action","appendChild","input","type","submit","remove","get","put","xFormPost","xFormPut","postFormData","getTodoList","http","fetchList","current","pageSize","todoServ","pageList","list","total","addBig","aNormalMethod","actionCtx","changeDesc","desc","module","currentTarget","nodeName","todos","revesedDesc","reverse","join","Home","HomeModel","plugins","reduxDevToolPlugin","models","configure","allowDup","run","errorHandler","msgService","middlewares","midCtx","next","alwaysRenderCaller","isStrict","cc","bindCcToWindow","priBuildCallParams","moduleName","connect","targetOptions","setup","tag","extra","staticExtra","cuDesc","passCuDesc","props","ccClassKey","regOpt","callTarget","callerParams","errHandler","Function","apply","fnName","renderKey","useC2Mod","useConcent","useC2DefaultMod","cst","MODULE_DEFAULT","useSetup","mergedOptions","settings","useSetupCtx","typeCtxM","ctx","getGlobalState","getGst","getGlobalComputed","getComputed","MODULE_GLOBAL","ctxOn","on","siderWidth","buttomBgColor","contentBgColor","waterMarkLabel","img1","img2","img404","img403","isLocalMode","port"],"mappings":"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","file":"static/js/12.b0606b8d.chunk.js","sourcesContent":["import * as commonUtil from 'utils/common';\nimport { APP_NAME } from 'configs/subApp';\nimport * as appEnvBase from './appEnvBase';\n\nconst cachedAppName = localStorage.getItem('someBaseNameKey') || '';\nconst cachedApiHost = localStorage.getItem('someApiHostKey');\n\n/**\n * 应用可能处于不同的basename下\n */\n// export function getBasename() {\n//   const { hostname, pathname } = window.location;\n//   // concent-pro 站点走特殊的basename，以符合 gh-pages 目录结构\n//   if (hostname.includes('github.io') && pathname.includes('concent-pro')) return '';\n//   return cachedAppName || '';\n// }\n\nexport function getBasename() {\n  const { hostname, pathname } = window.location;\n  if (commonUtil.isLocalMode()) return APP_NAME.toLocaleLowerCase();\n\n  // github.io 部署的站点走特殊的 basename，以符合 gh-pages 目录结构\n  if (hostname.includes('github.io')) {\n    if (appEnvBase.isSubApp()) {\n      const [, , appName] = pathname.split('/');\n      return appName || APP_NAME.toLocaleLowerCase();\n    }\n    return '';\n  }\n\n\n  if (appEnvBase.isSubApp()) {\n    return '';\n  }\n  // 约定了 /{appName}/xxx/yyy 格式的路由，第一段名字作为basename\n  const [, appName] = pathname.split('/');\n  return appName || APP_NAME.toLocaleLowerCase();\n}\n\n\nexport function getApiHost() {\n  // 是本地调试机器，携带者端口号\n  if (window.location.port !== '') return '';\n  return cachedApiHost || '';\n};\n\nexport function attachBasename(url: string) {\n  return `/${getBasename()}${url}`;\n}\n\n/**\n * 通常用于下载链接的拼接\n * @param {*} url\n */\nexport function attachApiHost(url: string) {\n  return `${getApiHost()}${url}`;\n}\n\n/**\n * 去掉basename之后的相对根路径，注不含search参数，等同于 location.pathname\n * <basename>/xxx/yyy ---> /xxx/yyy\n */\nexport function getRelativeRootPath() {\n  const { pathname, hash } = window.location;\n  const basename = getBasename();\n  let targetPathname = pathname;\n  if (hash.startsWith('#')) {\n    // 取的应该是hash后面的那一段path\n    targetPathname = extractPathAndSearch(hash.substr(1)).path;\n  }\n\n  if (basename) {\n    // basename: xxx-app\n    // pathname: /xxx-app/xxx or /xxx-app/xxx\n    // 所以此处 startIdx 取 basename 长度加1\n    const startIdx = basename.length + 1;\n    targetPathname = pathname.substr(startIdx);\n  }\n  if (!targetPathname) targetPathname = '/';\n\n  return targetPathname;\n}\n\nexport function getSearchPath(path: string, search: string) {\n  return search ? `${path}?${search}` : path;\n}\n\n/**\n * 返回的search字符串是无问号前缀的字符串\n * @param pathMayIncludeSearch\n * @returns\n */\nexport function extractPathAndSearch(pathMayIncludeSearch: string): { path: string, search: string } {\n  if (!pathMayIncludeSearch) return { path: '', search: '' };\n\n  const ensureNoStartQuestion = (stringMyStartsWithQuestion: string): string => {\n    if (stringMyStartsWithQuestion.startsWith('?')) {\n      const restStr = stringMyStartsWithQuestion.substr(1);\n      return ensureNoStartQuestion(restStr);\n    }\n    return stringMyStartsWithQuestion;\n  };\n\n  const firstQuestionIdx = pathMayIncludeSearch.indexOf('?');\n  let path = pathMayIncludeSearch;\n  let search = '';\n  if (firstQuestionIdx >= 0) {\n    const stringMyStartsWithQuestion = pathMayIncludeSearch.substr(firstQuestionIdx);\n    path = pathMayIncludeSearch.substring(0, firstQuestionIdx);\n    // 防止是 /xxx/yyy ????a=1 这样的错误数据传进来\n    search = ensureNoStartQuestion(stringMyStartsWithQuestion);\n  }\n\n  return { path, search };\n}\n","/**\n * 用于处理分微前端场景，在动态加载新模块时，防止不同的子应用模块重复\n * 推荐起一个和当前子应用同名的名字\n * 如不需要前缀，这里写为 '' 即可\n */\n\nexport const APP_NAME = 'your-app';\n","\nexport function okeys<T extends Record<string, any>>(map: T) {\n  // 外部需要自己 as (keyof T)[]\n  return Object.keys(map);\n}\n\nexport function isValidVal(val: any) {\n  return val !== undefined && val !== null && val !== '';\n}\n\n/**\n * 判断是否是对象 {} []\n * @param {*} val\n */\nexport function isObject(val: any, allowArr = true) {\n  // 防止 typeof null === 'object' 成立\n  if (!val) return false;\n  if (allowArr) {\n    return typeof val === 'object';\n  }\n  return typeof val === 'object' && !Array.isArray(val);\n}\n\nexport function clone<T extends Record<string, any>>(obj: T): T {\n  if (obj) return JSON.parse(JSON.stringify(obj));\n\n  throw new Error('empty object');\n}\n\nexport function safeGetItemFromArray<T = any>(arr: T[], idx: number, defaultValue: T) {\n  let item = arr[idx];\n  if (!item) {\n    item = arr[idx] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeGet<T = any>(obj: Record<string, any>, key: string, defaultValue: T) {\n  let item = obj[key];\n  if (!item) {\n    item = obj[key] = defaultValue;\n  }\n  return item;\n}\n\nexport function safeAssign(obj: Record<string, any>, toMod: Record<string, any> = {}) {\n  Object.keys(toMod).forEach((key) => {\n    obj[key] = toMod[key];\n  });\n  return obj;\n}\n\n/**\n * 指定了 defaultValue 时才不会抛出解析字符串失败的错误\n * @param jsonStr\n * @param defaultValue\n */\nexport function safeParse<T = any>(jsonStr: string, defaultValue?: T, errMsg?: string): T {\n  try {\n    return JSON.parse(jsonStr);\n  } catch (err) {\n    if (defaultValue) return defaultValue;\n    if (errMsg) throw new Error(errMsg);\n    throw err;\n  }\n}\n\ninterface NullDef {\n  nullValues?: any[];\n  /** {} 算不算空，true算空*/\n  emptyObjIsNull?: boolean;\n  /** 需不需要检查 {a:'', b:'' }, 默认false, 为true时，如果传入的是object，检查所有value算不算空 */\n  checkObjValues?: boolean;\n  emptyArrIsNull?: boolean;\n}\n/**\n *\n * @param value\n * @param nullDef\n */\nexport function isNull(value: any, nullDef: NullDef = {}) {\n  const {\n    nullValues = [null, undefined, ''], checkObjValues = false,\n    emptyObjIsNull = true, emptyArrIsNull = true,\n  } = nullDef;\n\n  const inNullValues = nullValues.includes(value);\n  if (inNullValues) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    if (emptyArrIsNull) return value.length === 0;\n    return false;\n  }\n\n  if (typeof value === 'object') {\n    const keys = okeys(value);\n    const keyLen = keys.length;\n\n    // {a:'', b:'' } 所有子value为空才算空\n    if (checkObjValues) {\n      let allIsNull = true;\n      for (let i = 0; i < keyLen; i++) {\n        const subValue = value[keys[i]];\n        if (!isNull(subValue)) {\n          allIsNull = false;\n          break;\n        }\n      }\n\n      return allIsNull;\n    }\n    if (emptyObjIsNull) return keyLen === 0;\n    return false;\n  }\n\n  return false;\n}\n\nexport function reverseMap(originalMap: Record<string, string | number>) {\n  return Object.keys(originalMap).reduce((map, key) => {\n    const value = originalMap[key];\n    map[value] = key;\n    return map;\n  }, {} as Record<string, string>);\n}\n\n/**\n * 后端有些接口返回空map的格式是数组 [],\n * 但其实期望的是 {},\n * 为了保证上传业务逻辑消费数据的格式一致性，使用此函数做修正\n */\nexport function ensureMap(obj: Record<string, any>, key: string) {\n  if (Array.isArray(obj[key])) {\n    obj[key] = {};\n  }\n}\n\n/**\n * 从一个已存在的map里按规则变异出一个新的map\n * @param map\n * @param getValue\n * @param getKey\n */\nexport function transformMap(map: Record<string, any>, getValue?: (value: any, key: string) => any, getKey?: (key: string, value: any) => string) {\n  const newMap = {} as Record<string, any>;\n  const targetGetKey = getKey || (key => key);\n\n  okeys(map).forEach(key => {\n    const value = map[key];\n    const mapKey = targetGetKey(key, value);\n    newMap[mapKey] = getValue ? getValue(value, key) : value;\n  });\n  return newMap;\n}\n\n/**\n * map 转为 list\n * @param map\n * @param keyName\n * @param valueName\n */\nexport function toList<V, Item>(map: Record<string, V>, getItem: (key: string, value: V) => Item) {\n  const list = [] as Item[];\n  okeys(map).forEach(key => {\n    const item = getItem(key, map[key]);\n    list.push(item);\n  });\n  return list;\n}\n\n/**\n * 过滤list，按规则组装新的item后返回一个新的 list\n * @param list\n * @param filterCb\n * @param getNewItem\n */\nexport function filterList<Item, NewItem>(list: Item[], filterCb: (item: Item) => boolean, getNewItem: (item: Item) => NewItem) {\n  const newList = [] as NewItem[];\n  list.forEach(item => {\n    if (filterCb(item)) newList.push(getNewItem(item));\n  });\n  return newList;\n}\n\n/**\n  * 对比新老对象，提取出新对象里发生变化的部分并单独返回\n  * 注意此函数只做浅比较\n  * @param {object} oldObj\n  * @param {object} newObj\n  * @param {string} [fixedKeys=[]] - 必定要包含的key\n  */\nexport function extractChangedPart(oldObj: Record<string, any>, newObj: Record<string, any>, fixedKeys: string[] = []) {\n  const changed = {} as Record<string, any>;\n  const oldObjKeys = okeys(oldObj);\n  const newObjKeys = okeys(newObj);\n  const traversalKeys = newObjKeys.length > oldObjKeys.length ? newObjKeys : oldObjKeys;\n\n  traversalKeys.forEach(key => {\n    const newVal = newObj[key];\n    if (fixedKeys.includes(key)) {\n      changed[key] = newVal;\n      return;\n    }\n    if (newVal === undefined) return;\n    if (oldObj[key] !== newVal) changed[key] = newVal;\n  });\n  return changed;\n}\n\nexport function hasProperty(obj: Record<string, any>, property: string) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\n\nexport function purify(obj: Record<string, any>, isValueInvalid?: (val: any) => boolean): Record<string, any> {\n  // isValidVal or isNull\n  const targetIsInvalid = isValueInvalid || (value => !isNull(value));\n  const pureObj = {} as Record<string, any>;\n  okeys(obj).forEach(key => {\n    if (targetIsInvalid(obj[key])) pureObj[key] = obj[key];\n  });\n  return pureObj;\n}\n\n/**\n * 针对string 或则 number 元素的数组做不重复添加\n * @param arr\n * @param item\n */\nexport function noDupPush(arr: (string | number)[], item: string | number) {\n  if (!arr.includes(item)) arr.push(item);\n}\n\nexport function getVal(obj: Record<string, any>, key: string) {\n  return obj[key];\n}\n\n\nexport function getDepth(obj: Record<string, any>) {\n  let depth = 0;\n  if (obj.children) {\n    obj.children.forEach((d: any) => {\n      const tmpDepth = getDepth(d);\n      if (tmpDepth > depth) {\n        depth = tmpDepth;\n      }\n    });\n  }\n  return 1 + depth;\n}\n\nexport function getObjDepth(obj: Record<string, any>) {\n  type DepthRecorder = { num: number };\n\n  const tryDetectObjDepth = (obj: Record<string, any>, curDepth: number, depthRecorder: DepthRecorder) => {\n    const keys = okeys(obj);\n    const newDepth = curDepth + 1;\n    for (let i = 0; i < keys.length; i++) {\n      const val = obj[keys[i]];\n      if (isObject(val)) {\n        if (depthRecorder.num < newDepth) depthRecorder.num = newDepth;\n        tryDetectObjDepth(val, newDepth, depthRecorder);\n      }\n    }\n  };\n\n  const depthRecorder: DepthRecorder = { num: 1 };\n  tryDetectObjDepth(obj, 1, depthRecorder);\n  return depthRecorder.num;\n}\n\nexport function isDepthLargeThan(obj: Record<string, any>, toCompare: number) {\n  const depth = getObjDepth(obj);\n  return depth > toCompare;\n}\n\n/**\n * 确定一个有效值，如果左边无效，则取右边的备用值\n * @param firstVal\n * @param secondVal\n */\nexport function decideVal<T extends any>(firstVal: any, secondVal: T): T {\n  if (!isNull(firstVal)) return firstVal;\n  return secondVal;\n}\n\nexport function inEnum(val: string | number, enumObj: Record<string, string | number>) {\n  return Object.values(enumObj).includes(val);\n}\n","/**\n * -----------------------------------------------------------------------------------------\n * 对接antd message模块，防止频繁调用时出现相同内容的提示\n * -----------------------------------------------------------------------------------------\n */\nimport { message } from 'antd';\n\n/**\n * key: ${method}_${content}\n * 缓存对应方法的提示回调\n */\nconst key2tipTimer = {} as Record<string, any>;\nconst validMethods = ['info', 'error', 'success', 'warn', 'warning'] as const;\nconst NO_DUP_DURATION = 1200;\n\ntype MsgType = import('antd/lib/message').MessageType | 'ignored';\ntype Methods = typeof validMethods[number];\n/** 单位：s，提示展现多少s后消失 */\ntype DisplayDuration = number;\n/** 单位：ms, 该指定毫秒时间内出现的重复提示会被忽略掉，小于0时无该规则 */\ntype NoDupDuration = number;\n\nfunction _callMessageMethod(method: Methods, cb: (arg: any) => void, content: React.ReactNode, displayDuration: DisplayDuration, noDupDuration: NoDupDuration) {\n  if (!validMethods.includes(method)) {\n    console.error(`messageService call invalid method[${method}]`);\n    return cb('ignored');\n  }\n\n  // 直接提示，无重复校验规则\n  if (noDupDuration < 0) {\n    return cb(message[method](content, displayDuration));\n  }\n\n  const key = `${method}_${content}`;\n  const tipTimer = key2tipTimer[key];\n  if (tipTimer) {\n    // 忽略本次提示\n    return cb('ignored');\n  }\n\n  key2tipTimer[key] = setTimeout(() => {\n    delete key2tipTimer[key];\n  }, noDupDuration);\n\n  cb(message[method](content, displayDuration));\n}\n\n/**\n * 通用的提示方式，动态传参决定提示类型\n */\nexport function call(method: Methods, content: React.ReactNode, displayDuration: DisplayDuration = 3,\n  noDupDuration: NoDupDuration = NO_DUP_DURATION\n) {\n  return new Promise((resolve) => {\n    _callMessageMethod(method, resolve, content, displayDuration, noDupDuration);\n  }) as Promise<MsgType>;\n}\n\n/**\n * 普通提示\n */\nexport function info(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('info', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 错误提示\n */\nexport function error(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('error', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 成功提示\n */\nexport function success(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('success', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 警告提示\n */\nexport function warn(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('warn', resolve, content, displayDuration, noDupDuration);\n  });\n}\n\n/**\n * 警告提示\n */\nexport function warning(content: React.ReactNode, displayDuration: DisplayDuration = 3, noDupDuration: NoDupDuration = NO_DUP_DURATION) {\n  return new Promise((resolve) => {\n    _callMessageMethod('warning', resolve, content, displayDuration, noDupDuration);\n  });\n}\n","\n/**\n * 由 configs/menus 派生出的数据\n */\nimport { IMenuGroup, IMenuItem } from '../menus';\n\n// 打平菜单为一层的结构\nfunction flatMenus(menus: Array<IMenuItem | IMenuGroup>) {\n  const flatted = [] as IMenuItem[];\n\n  const pushToFlatted = (item: IMenuItem) => {\n    flatted.push(item);\n  };\n\n  menus.forEach((item) => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      groupItem.children.forEach(pushToFlatted);\n      return;\n    }\n    const menuItem = item as IMenuItem;\n    pushToFlatted(menuItem);\n  });\n\n  return flatted;\n}\n\n// 提前计算好 menus 的相关映射关系，或者其他目标参数，以及填充true默认值(方便其他地方使用时能够拥有正确的默认值)\nfunction calcMenus(menus: Array<IMenuItem | IMenuGroup>) {\n  let homePageFullPath = '';\n\n  menus.forEach((item) => {\n    const groupItem = item as IMenuGroup;\n    if (groupItem.children) {\n      const { children, ...rest } = groupItem;\n      const showingMenuGroup: IMenuGroup = { ...rest, children: [] };\n      const allMenuGroup: IMenuGroup = { ...rest, children: [] };\n\n      children.forEach((childItem) => {\n        const { path, showInSider = true, setContentLayout = true, exact = true, ...rest } = childItem;\n        const fillDefaultValChildItem = { ...rest, exact, path, showInSider, setContentLayout };\n        allMenuGroup.children.push(fillDefaultValChildItem);\n\n        path2menuGroup[path] = allMenuGroup;\n        path2menuItem[path] = fillDefaultValChildItem;\n        if (childItem.isHomePage) {\n          homePageFullPath = path;\n          path2menuGroup['/'] = groupItem;\n          path2menuItem['/'] = fillDefaultValChildItem;\n        }\n        if (showInSider) {\n          showingMenuGroup.children.push(fillDefaultValChildItem);\n        }\n      });\n      showingMenus.push(showingMenuGroup);\n      allMenus.push(allMenuGroup);\n      return;\n    }\n\n    const menuItem = item as IMenuItem;\n    const { path, isHomePage, showInSider = true, setContentLayout = true, exact = true, ...rest } = menuItem;\n    const fillDefaultValMenuItem = { ...rest, exact, path, isHomePage, showInSider, setContentLayout };\n    allMenus.push(fillDefaultValMenuItem);\n    path2menuItem[path] = fillDefaultValMenuItem;\n    if (isHomePage) {\n      path2menuItem['/'] = fillDefaultValMenuItem;\n      homePageFullPath = path;\n    }\n    if (showInSider) {\n      showingMenus.push(fillDefaultValMenuItem);\n    }\n  });\n  return { path2menuGroup, path2menuItem, homePageFullPath, showingMenus, allMenus };\n}\n\nlet homePageFullPath = '';\nlet path2menuItem: Record<string, IMenuItem> = {};\nlet path2menuGroup: Record<string, IMenuGroup> = {};\n// 保持层级结构的可展现的菜单，翻遍垂直或水平模式下不用判断showInSider条件，直接渲染\n// 因为水平下判断 showInSider 为false，返回无效节点会导致antd菜单组件报错\nlet showingMenus: Array<IMenuItem | IMenuGroup> = [];\nlet allMenus: Array<IMenuItem | IMenuGroup> = [];\n/** 打平后的菜单，方便构造路由组件 */\nlet flattedMenus: Array<IMenuItem> = [];\n\nexport function calcMenuData(menus: Array<IMenuItem | IMenuGroup>) {\n  const ret = calcMenus(menus);\n  path2menuItem = ret.path2menuItem;\n  path2menuGroup = ret.path2menuGroup;\n  showingMenus = ret.showingMenus;\n  allMenus = ret.allMenus;\n  homePageFullPath = ret.homePageFullPath;\n  flattedMenus = flatMenus(allMenus);\n}\n\nexport function getMenuData() {\n  return {\n    path2menuGroup,\n    path2menuItem,\n    homePageFullPath,\n    /** 辅助Sider组件，构造带层级关系的可展示菜单视图，注(指向的item数据也已经正确了填充了true默认值) */\n    showingMenus,\n    /** 所有的菜单，已正确填充了默认布尔值true的各个数据节点 */\n    allMenus,\n    flattedMenus,\n  };\n}\n","\nexport function delay(ms = 1000) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import { LS_C2PRO_SETTINGS, LS_C2PRO_SETTINGS_VER } from 'configs/constant/sys';\nimport { getBasename } from './appPath';\nimport * as appEnvBase from './appEnvBase';\n\n/**\n * 判断是否是生产环境\n */\nexport function isProdEnv() {\n  return appEnvBase.isProdEnv();\n}\n\nexport function getC2ProSettingsKey() {\n  const basename = getBasename();\n  return basename ? `${LS_C2PRO_SETTINGS}.${basename}` : LS_C2PRO_SETTINGS;\n}\n\nexport function getC2ProSettingsVerKey() {\n  const basename = getBasename();\n  return basename ? `${LS_C2PRO_SETTINGS_VER}.${basename}` : LS_C2PRO_SETTINGS_VER;\n}\n\nexport function setMasterAppLoadedSignal() {\n  appEnvBase.setMasterAppLoadedSignal();\n}\n\n/**\n * 是否是子应用\n * 子应用渲染时不渲染任何排版，仅挂载MainContent\n * @returns\n */\nexport function isSubApp() {\n  return appEnvBase.isSubApp();\n}\n","import { getBasename } from 'services/appPath';\nimport * as commonUtil from 'utils/common';\n\nconst pathName = (path: string) => {\n  // 本地加载时，根节点会挂载 RootRouter，无需拼接 basename 前缀\n  if (commonUtil.isLocalMode()) {\n    return path;\n  }\n  return `/${getBasename()}${path}`;\n};\n\nexport const DEMO = pathName('/demo');\n\nexport const DEMO_USE_SETUP = pathName('/demo-use-setup');\n\nexport const SIMPLE_LIST = pathName('/simple-list');\n\nexport const STEP_FORM = pathName('/step-form');\n","import * as routerPathCst from './routerPath';\nimport * as sysCst from './sys';\n\nexport const routerPath = routerPathCst;\nexport const sys = sysCst;\n\n","///////////////////////////////////////////////////////////////////\n//\n// appPath 依赖 appEnv，appPath 和 appEnv 需共同依赖 isProdEnv，估独立一个\n// 文件放此函数，避免循环依赖\n//\n///////////////////////////////////////////////////////////////////\nimport * as commonUtil from 'utils/common';\n\n\n/**\n * 判断是否是生产环境\n */\nexport function isProdEnv() {\n  if (commonUtil.isLocalMode()) return false;\n  const { hostname } = window.location;\n  if (hostname === 'xxx.yy.com') {\n    return true;\n  }\n  return false;\n}\n\nlet masterAppLoadedSetSignal: number = 0;\nexport function setMasterAppLoadedSignal() {\n  window.__MASTER_APP_LOADED__ = true;\n  masterAppLoadedSetSignal = 1;\n}\n\n/**\n * 是否是子应用\n * 子应用渲染时不渲染任何排版，仅挂载MainContent\n * @returns\n */\nexport function isSubApp() {\n  // 本地开发时，强制设置当前应用作为子应用来加载\n  if (process.env.REACT_APP_IS_SUB_APP === 'true') {\n    return true;\n  }\n  // 被设置过了，当前应用一定是主应用，主应用不包含任何业务pages，全靠SubAppLoader加载各个子应用\n  if (masterAppLoadedSetSignal !== 0) {\n    return false;\n  }\n  // __MASTER_APP_LOADED__ 已被主应用设置为true了，当前站点一定是子应用\n  if (window.__MASTER_APP_LOADED__ === true) {\n    return true;\n  }\n  return false;\n}\n","\n/**\n * delare module names in this file\n */\n\n// 用于处理分微前端场景，在动态加载新模块时，防止不同的子应用模块重复\n// 推荐起一个和当前子应用同名的名字\n// 如不需要前缀，这里写为 '' 即可\\\nexport const MOD_PREFIX = '' as const;\n\nconst modName = <T extends string>(name: T) => `${MOD_PREFIX}${name}` as `${typeof MOD_PREFIX}${T}`;\n\nexport const DEMO = 'Demo' as const;\nexport type T_DEMO = typeof DEMO;\n\nexport const DEMO_TODO_LIST = modName('DemoTodoList');\nexport type T_DEMO_TODO_LIST = typeof DEMO_TODO_LIST;\n\nexport const DEMO_CLONED = modName('DemoCloned');\nexport type T_DEMO_CLONED = typeof DEMO_CLONED;\n\nexport const COUNTER = modName('Counter');\nexport type T_COUNTER = typeof COUNTER;\n\nexport const HOME = modName('Home');\nexport type T_HOME = typeof HOME;\n\n// 接入申请页面\nexport const APPLY_CONFIG = modName('ApplyConfig');\nexport type T_APPLY_CONFIG = typeof APPLY_CONFIG;\n\n// 接入列表页面\nexport const APPLY_LIST = modName('ApplyList');\nexport type T_APPLY_LIST = typeof APPLY_LIST;\n","/**\n * 采取getter模式，让外界来每次获取的都是新的正则表达式\n * 避免同一个表达式反复使用出现bug\n */\n\nconst regs = {\n  get num1to9() {\n    return /^[1-9]+[0-9]*$/;\n  }\n}\n\nexport default regs;\n","/**\n * 员工名字服务\n */\n\nimport debounce from 'lodash/debounce';\n\nfunction getStaffList(): Array<[string, string]> {\n  // @ts-ignore\n  return window['_staffList'] || [];\n}\n\nlet isInitCalled = false;\n\n/**\n * 需要用员工数据的组件，需要在didMount时先调用此方法\n * 该方法会自己会保证只真正的调用一次\n */\nexport function initData() {\n  if (isInitCalled) return;\n  // isInitCalled = true;\n  // const userScript = document.createElement('script');\n  // userScript.src = `http://www.youstafname.com?v=${new Date().toDateString().replace(/ /g, '')}`;\n  // userScript.async = true;\n  // document.head.appendChild(userScript);\n\n  // @ts-ignore \n  window['_staffList'] = [\n    ['jack', 'jack(Beijing)'],\n    ['mark', 'mark(Beijing)'],\n    ['zzk', 'zzk(NewYork)'],\n    ['hi concent', 'concent(Landon)'],\n    ['hi concent2', 'concent(Beijing)'],\n    ['hi concent3', 'concent(ShangHai)'],\n  ];\n}\n\n/**\n * 查询用户\n * 为0时默认取10个\n * 长度大于2的字符串才开始真正匹配\n * @param {string} toMatchStr\n */\nexport function searchUsers(toMatchStr: string): Array<[string, string]> {\n  if (toMatchStr.length === 0) return getStaffList().slice(0, 10);\n  if (toMatchStr.length < 2) return [];\n  const pattern = new RegExp(`^${toMatchStr}`);\n  return getStaffList().filter((item) => {\n    const [rtxname] = item;\n    return pattern.test(rtxname);\n  }).slice(0, 10);\n}\n\n/**\n * @type {(toMatchStr:string)=>string[]}\n * 防抖动的用户查询操作\n */\nexport const delaySearchUsers = debounce(searchUsers, 300);\n","\nfunction getInitialState() {\n  return {\n    value: 0,\n    bigValue: 100,\n    barData: [] as any[],\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './state';\n\n// only value change will triiger this function to execute again\nexport function doubleCount({ value }: St) {\n  return value * 2;\n}\n","import { St } from './state';\nimport { VoidPayload, AC } from 'types/store';\nimport { T_COUNTER } from 'configs/c2Mods';\nimport { random } from 'utils/num';\n\ntype IAC = AC<T_COUNTER>;\n\nexport function forCopy(payload: VoidPayload, moduleState: St, ac: IAC) {\n  console.log('call ac.setState or ac.dispatch when needed', ac.setState);\n}\n\nconst delay = (ms = 1000) => new Promise(r => setTimeout(r, ms));\n\nexport function incrementBigValue(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { bigValue: moduleState.bigValue + 50 };\n}\n\nexport function increment(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value + 1 };\n}\n\nexport function decrement(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value - 1 };\n}\n\nexport function incrementByAmount(amount: number, moduleState: St): Partial<St> {\n  return { value: moduleState.value + amount };\n}\n\nexport async function incrementAsync(amount: number, moduleState: St): Promise<Partial<St>> {\n  await delay();\n  // or just write ac.dispatch of return\n  // await ac.dispatch(incrementByAmount, amount);\n  return { value: moduleState.value + amount };\n}\n\nexport function foo() {\n  console.log('call foo');\n}\n\nexport function ranBarData(p: VoidPayload) {\n  const getItem = (i: number) => ({ time: `部门${i}`, value: random(100) });\n  return {\n    barData: new Array(16).fill('').map((v, idx) => getItem(idx)),\n  };\n}\n\nexport function clear() {\n  console.log('clear');\n}\n","import regs from './regs';\n\n/**\n * 检查输入值是否能转化为数字且没有包含其他除.以外的非法字符\n * input: '22.s' ---> outpur: false\n * input: '22.1' ---> outpur: true\n * input: '22' ---> outpur: true\n * input: 22 ---> outpur: true\n * input: 22.1 ---> outpur: true\n * @param val\n */\nexport function canBeNum(val: any) {\n  const valType = typeof val;\n  if (valType === 'string') {\n    if (val.includes('.')) {\n      const pureStr = val.replace(/\\./g, '');\n      // 去掉.之后，如果还包含有其他字符，则直接返回false\n      if (!regs.num1to9.test(pureStr)) return false;\n\n      const parsed = parseFloat(val);\n      return !Number.isNaN(parsed);\n    }\n    return regs.num1to9.test(val);\n  } if (valType === 'number') {\n    return true;\n  }\n  return false;\n}\n\nexport function random(seed: number) {\n  return Math.floor(seed * Math.random());\n}\n","import { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import { HOME } from 'configs/c2Mods';\nimport state from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  [HOME]: {\n    state,\n    computed,\n    reducer,\n    lifecycle,\n  },\n};\n","import Color from 'color';\n\nfunction privSetColor(key: string, val: string) {\n  if (window.document) {\n    window.document.documentElement.style.setProperty(key, val);\n  }\n}\n\nexport function hex2rgb(hexColor: string) {\n  const c = new Color(hexColor);\n  const rgb = c.object();\n  return rgb;\n}\n\nexport function hex2rgbString(hexColor: string) {\n  const rgb = hex2rgb(hexColor);\n  return `${rgb.r}, ${rgb.g}, ${rgb.b}`;\n}\n\nexport function getThemeColorLight(hexColor: string, lighten: number = 0.6) {\n  const c = new Color(hexColor);\n  const themeColorLight = c.lighten(lighten).hex();\n  return themeColorLight;\n}\n\nexport function changeThemeColor(hexColor: string) {\n  privSetColor('--theme-color', hexColor);\n}\n\nexport function changeThemeColorLight(themeColorLight: string) {\n  privSetColor('--theme-color-light', themeColorLight);\n}\n\nexport function changeThemeColorRGB(themeColorRGB: string) {\n  privSetColor('--theme-color-rgb', themeColorRGB);\n}\n\nexport function changeFontAlpha(alpha: number) {\n  privSetColor('--theme-color-text', `rgba(0, 0, 0, ${alpha / 100})`);\n}\n","\nimport { SiderTheme } from 'antd/lib/layout/Sider';\nimport {\n  SiderViewTypes, TopHeaderTypes, TopNavBarTypes, LoginStatus, SiteColorTypes, SiderLogoTypes,\n  LS_C2PRO_SETTINGS, LS_C2PRO_SETTINGS_VER, siteThemeColor,\n} from 'configs/constant/sys';\nimport { getMenuData } from 'configs/derived/menus';\nimport * as colorServ from 'services/color';\nimport * as commonUtil from 'utils/common';\nimport { safeParse, inEnum } from 'utils/obj';\ninterface IRoutePathInfo {\n  path: string;\n  search: string;\n}\n\nconst curSettingKeyVer = '11';\n\nfunction needCachedSettings() {\n  const cachedKeyVer = localStorage.getItem(LS_C2PRO_SETTINGS_VER);\n  const isKeyVerEqual = cachedKeyVer === curSettingKeyVer;\n  if (!isKeyVerEqual) {\n    localStorage.setItem(LS_C2PRO_SETTINGS_VER, curSettingKeyVer);\n  }\n  // key版本相同，才需要取缓存的主题配置，意味着如果想每次发版让store里默认的配置生效，\n  // 修改一下 curSettingKeyVer 的值即可\n  return isKeyVerEqual;\n}\n\nfunction getInitialState() {\n  const themeColor = siteThemeColor;\n  const themeColorRGB = colorServ.hex2rgbString(themeColor);\n\n  const defaultState = {\n    activeRoutePaths: [] as IRoutePathInfo[],\n    curActiveRoutePath: '',\n    /** 整个站点的色彩模式 */\n    siteColorType: SiteColorTypes.NORMAL,\n    /** 启用水印功能 */\n    allowWaterMark: true,\n    /** 可能含search */\n    curActiveRouteFullPath: '',\n    /** 快捷导航条项目是否用深色背景 */\n    isTabPaneHeavyBg: false,\n    /** 站点的字体色值透明度，值越大，字体颜色越深 */\n    fontAlpha: 75,\n    topHeaderType: TopHeaderTypes.HIDDEN,\n    topNavBarType: TopNavBarTypes.FIXED,\n    siderViewType: SiderViewTypes.COLLAPSED,\n    siderLogoType: SiderLogoTypes.IMG_AND_LABEL,\n    siderViewToCollapsedTime: 0,\n    /** 当sider从无到有时，用于还原原来的折叠情况 */\n    siderViewTypeBackup: SiderViewTypes.COLLAPSED,\n    /** 常用设置抽屉是否可见 */\n    settingDrawerVisible: false,\n    siderTheme: 'dark' as SiderTheme,\n    headerTheme: 'light' as SiderTheme,\n    isUsingDefaultThemeColor: true,\n    /** 个性化设置的站点的主题颜色 */\n    custThemeColor: themeColor,\n    /** 使用中的站点主题颜色 */\n    themeColor,\n    themeColorRGB,\n    themeColorLight: colorServ.getThemeColorLight(themeColor),\n    someInfo: 'overWrite built-in module global\\'s state',\n\n    /** 登录状态，默认是正在执行登录中 */\n    loginStatus: LoginStatus.LOGGING,\n    loginBtnLoading: false,\n    /** 系统是否准备就绪，包括登录、配置数据拉取等动作完成才是就绪 */\n    isAppReady: false,\n    userName: '',\n    userIcon: '',\n    /** 当前登录者是否是管理员 */\n    isAdmin: false,\n    /** 当前用户拥有的权限列表 */\n    authIds: [] as string[],\n    /** 处于innerMock时，httpService的请求结果会直接从模拟文件获取（同时还会配合 excludedMockApis 名单），注意此时不会从浏览器发出请求 */\n    isInnerMock: commonUtil.isLocalMode(),\n    /** isInnerMock 为 true 时，只要实现了的mock函数，如果没有在 excludedMockApis 名单里， 都会去被调用 */\n    excludedMockApis: [\n    ] as string[],\n  };\n\n  if (!needCachedSettings()) {\n    return defaultState;\n  }\n\n  // 还原用户最近一次设置数据\n  const cachedSettings = safeParse(localStorage.getItem(LS_C2PRO_SETTINGS) || '', defaultState);\n  const final = { ...defaultState, ...cachedSettings };\n  const { activeRoutePaths } = final;\n\n  // 确保path数据是正确的\n  try {\n    const validActiveRoutePaths: IRoutePathInfo[] = [];\n    const { path2menuItem } = getMenuData();\n    activeRoutePaths.forEach((v) => {\n      if (!v || typeof v !== 'object') return;\n      if (v.path && path2menuItem[v.path]) {\n        validActiveRoutePaths.push(v);\n      }\n    });\n    final.activeRoutePaths = validActiveRoutePaths;\n  } catch (err) {\n    final.activeRoutePaths = [];\n  }\n\n  // 未使用默认默认主题色，需要修改 isUsingDefaultThemeColor 为 false\n  if (final.themeColor !== siteThemeColor) final.isUsingDefaultThemeColor = false;\n  // 修正可能错误的 topHeaderType, topNavBarType 值\n  if (!inEnum(final.topHeaderType, TopHeaderTypes)) {\n    final.topHeaderType = defaultState.topHeaderType;\n  }\n  if (!inEnum(final.topNavBarType, TopNavBarTypes)) {\n    final.topNavBarType = defaultState.topNavBarType;\n  }\n  if (!inEnum(final.siderViewType, SiderViewTypes)) {\n    final.siderViewType = defaultState.siderViewType;\n    final.siderViewTypeBackup = defaultState.siderViewTypeBackup;\n  }\n\n  return final;\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { VoidPayload } from 'concent';\nimport { siteThemeColor, SiderViewTypes, LoginStatus } from 'configs/constant/sys';\nimport { getMenuData } from 'configs/derived/menus';\nimport { delay } from 'utils/timer';\nimport * as colorServ from 'services/color';\nimport { getSearchPath } from 'services/appPath';\nimport * as msgServ from 'services/message';\nimport { St, IAC } from './meta';\n\nconst { COLLAPSED, NOT_COLLAPSED, HIDDEN } = SiderViewTypes;\ntype PSt = Partial<St>;\nconst fakeLoginData = {\n  userName: 'hi concent pro',\n  userIcon: 'https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3662109890,1098716941&fm=15&gp=0.jpg',\n  isAdmin: true,\n  token: 'xxxyyy',\n  isLogin: true,\n}\n\nexport function toggleCollapsedBtn(payload: VoidPayload, moduleState: St) {\n  const { siderViewType } = moduleState;\n  if (siderViewType === COLLAPSED) {\n    return { siderViewType: NOT_COLLAPSED, siderViewTypeBackup: NOT_COLLAPSED };\n  }\n  return { siderViewType: COLLAPSED, siderViewTypeBackup: COLLAPSED, siderViewToCollapsedTime: Date.now() };\n}\n\nexport async function changeIsUsingDefaultTheme(checked: boolean, moduleState: St, ac: IAC) {\n  await ac.setState({ isUsingDefaultThemeColor: checked });\n  await ac.dispatch(changeThemeColor, { themeColor: siteThemeColor });\n}\n\n/**\n * 添加一个激活的页签\n */\nexport function addActiveRoutePath(payload: { path: string, search?: string }, moduleState: St) {\n  const { path, search = '' } = payload;\n  const newFullPath = getSearchPath(path, search);\n  const { activeRoutePaths, curActiveRouteFullPath } = moduleState;\n  if (newFullPath === curActiveRouteFullPath) return {};\n\n  const toSet: Partial<St> = { curActiveRouteFullPath: newFullPath, curActiveRoutePath: path };\n\n  // 打开下面逻辑：带search参数路由不写标签页\n  // if (search) { return toSet; }\n  const { path2menuItem } = getMenuData();\n  const menuItem = path2menuItem[path];\n  if (!menuItem) { return toSet; }\n\n  // 打开下面逻辑：不显示在边栏菜单里的路由组件不写标签页\n  // if (!menuItem.showInSider) { return toSet; }\n\n  const targetPathInfo = activeRoutePaths.find(v => v.path === path && v.search === search);\n  if (!targetPathInfo) {\n    // 最多激活8个\n    if (activeRoutePaths.length <= 8) {\n      activeRoutePaths.push({ path, search });\n    } else {\n      // 否则替换掉第一个\n      activeRoutePaths[0] = { path, search };\n    }\n    toSet.activeRoutePaths = activeRoutePaths;\n  }\n\n  return toSet;\n}\n\n/**\n * 删除页签\n */\nexport function delActiveRoutePath(payload: { path: string, search: string }, moduleState: St) {\n  const { path, search } = payload;\n  const { activeRoutePaths } = moduleState;\n\n  const targetRoutePath = activeRoutePaths.find(v => v.path === path && v.search === search);\n  let curActiveRoutePath = '/';\n  let curActiveRouteFullPath = curActiveRoutePath;\n  if (targetRoutePath) {\n    const idx = activeRoutePaths.findIndex(v => v.path === path && v.search === search);\n    const toDelPath = targetRoutePath.path;\n    activeRoutePaths.splice(idx, 1);\n    // 如果删除的就是当前激活的path\n    if (toDelPath === moduleState.curActiveRoutePath) {\n      // 替换为第一个\n      if (activeRoutePaths.length >= 1) {\n        const [firstPath] = activeRoutePaths;\n        curActiveRoutePath = firstPath.path;\n        curActiveRouteFullPath = getSearchPath(firstPath.path, firstPath.search);\n      }\n    } else {\n      curActiveRoutePath = moduleState.curActiveRoutePath;\n      curActiveRouteFullPath = moduleState.curActiveRouteFullPath;\n    }\n\n    return { activeRoutePaths, curActiveRoutePath, curActiveRouteFullPath };\n  }\n  return { curActiveRoutePath, curActiveRouteFullPath };\n}\n\nexport function toggleSiderVisible(p: any, moduleState: St): PSt {\n  const { siderViewType, siderViewTypeBackup } = moduleState;\n  if (siderViewType === HIDDEN) {\n    const toSet: PSt = { siderViewType: siderViewTypeBackup };\n    if (siderViewTypeBackup === COLLAPSED) toSet.siderViewToCollapsedTime = Date.now();\n    return toSet;\n  }\n  return { siderViewType: HIDDEN };\n}\n\n/**\n * 修改边栏视图模式，为了让 toggle 按钮按预期工作，需记录前一刻展开时的视图模式，\n */\nexport function changeSiderViewType(siderViewType: SiderViewTypes, moduleState: St): PSt {\n  const toSet: Partial<St> = { siderViewType };\n  if (siderViewType === SiderViewTypes.HIDDEN) {\n    toSet.siderViewTypeBackup = moduleState.siderViewType;\n  }\n  return toSet;\n}\n\nexport function changeThemeColor(payload: { themeColor: string, setCustThemeColor?: boolean }): PSt {\n  const { themeColor, setCustThemeColor } = payload;\n  colorServ.changeThemeColor(themeColor);\n  // 修改浅色\n  const themeColorLight = colorServ.getThemeColorLight(themeColor);\n  colorServ.changeThemeColorLight(themeColorLight);\n  // 修改主题色rgb值\n  const themeColorRGB = colorServ.hex2rgbString(themeColor);\n  colorServ.changeThemeColorRGB(themeColorRGB);\n\n  const toSet: Partial<St> = { themeColor, themeColorLight, themeColorRGB };\n  if (setCustThemeColor) {\n    toSet.custThemeColor = themeColor;\n    toSet.isUsingDefaultThemeColor = false;\n  }\n  return toSet;\n}\n\nexport function changeFontAlpha(fontAlpha: number): PSt {\n  colorServ.changeFontAlpha(fontAlpha);\n  return { fontAlpha };\n}\n\nexport function changeIsTabPaneHeavyBg(isTabPaneHeavyBg: boolean): PSt {\n  return { isTabPaneHeavyBg };\n}\n\nexport function switchSiderTheme(checked: boolean, moduleState: St): PSt {\n  return { siderTheme: checked ? 'dark' : 'light' };\n}\n\nexport function switchHeaderTheme(checked: boolean): PSt {\n  return { headerTheme: checked ? 'dark' : 'light' };\n}\n\nexport function changeIsInnerMock(checked: boolean): PSt {\n  return { isInnerMock: checked };\n}\n\n\nexport async function loginByCookie(payload: VoidPayload, moduleState: St, ac: IAC): Promise<PSt> {\n  await ac.setState({ loginStatus: LoginStatus.LOGGING });\n  await delay(300);\n\n  // 需自己实现使用站点的cookie或者token去验证登录信息，这里仅模拟接口自动登录\n  const loginDeadline = parseInt(localStorage.getItem('C2_loginDeadline') || '0');\n  if (Date.now() - loginDeadline < 24 * 60 * 60 * 1000) {\n    const loginData = await Promise.resolve(fakeLoginData);\n    const toSet: PSt = { ...loginData, isAppReady: true, loginStatus: LoginStatus.LOGIN_SUCCESS };\n    return toSet;\n  }\n  // todo 写 authId 到 state里\n  // toSet.authIds = await someService.fetchAuthIds();\n\n  return { loginStatus: LoginStatus.LOGIN_FAILED };\n}\n\n/**\n * 账密登录，此处仅模拟，真实逻辑需用户根据自己的实际情况去做具体实现\n * 这里的流程是 账密登录后后端写入最新的cookie，然后执行 loginByCookie 逻辑\n */\nexport async function loginByPassword(payload: { name: string, pwd: string }, moduleState: St, ac: IAC) {\n  await ac.setState({ loginBtnLoading: true });\n  await delay(300);\n  // 模拟账密登录\n  if (payload.name !== 'concent' || payload.pwd !== 'pro') {\n    msgServ.warn('账号密码错误，输入账号 concent，密码 pro ，即可登录');\n    return { loginBtnLoading: false, loginStatus: LoginStatus.LOGIN_FAILED };\n  }\n  // 站点写入cookie凭证后，执行\n  localStorage.setItem('C2_loginDeadline', String(Date.now()));\n  await ac.dispatch(loginByCookie);\n}\n\nexport function logout(): PSt {\n  localStorage.setItem('C2_loginDeadline', '0');\n  return { loginStatus: LoginStatus.LOGIN_FAILED, loginBtnLoading: false };\n}\n","import { St } from './state';\nimport { sys } from 'configs/constant';\n\nconst {\n  TopHeaderTypes: th, TopNavBarTypes: tn, SiderViewTypes, siderWidthPx, SiderLogoTypes,\n  collapsedLogoImg, collapsedLogoImgOfDark, collapsedLogoLabel,\n  notCollapsedLogoImg, notCollapsedLogoImgOfDark, notCollapsedLogoLabel,\n} = sys;\nconst { HIDDEN, COLLAPSED, NOT_COLLAPSED } = SiderViewTypes;\n\nconst viewType2LeftValue = {\n  [HIDDEN]: '0',\n  [COLLAPSED]: '48px',\n  [NOT_COLLAPSED]: siderWidthPx,\n};\nconst logoKey2ImgUrlList = {\n  // 小图 +文字 logo\n  light: [collapsedLogoImg],\n  dark: [collapsedLogoImgOfDark],\n  // 纯图片 logo\n  [`light_${SiderViewTypes.COLLAPSED}`]: [collapsedLogoImg, collapsedLogoImgOfDark],\n  [`light_${SiderViewTypes.NOT_COLLAPSED}`]: [notCollapsedLogoImg, notCollapsedLogoImgOfDark],\n  [`light_${SiderViewTypes.HIDDEN}`]: [notCollapsedLogoImg, notCollapsedLogoImgOfDark],\n  [`dark_${SiderViewTypes.COLLAPSED}`]: [collapsedLogoImgOfDark, collapsedLogoImg],\n  [`dark_${SiderViewTypes.NOT_COLLAPSED}`]: [notCollapsedLogoImgOfDark, notCollapsedLogoImg],\n  [`dark_${SiderViewTypes.HIDDEN}`]: [notCollapsedLogoImgOfDark, notCollapsedLogoImg],\n};\nconst paddingTopMap = {\n  [`${th.FIXED}_${tn.FIXED}`]: '80px',\n  [`${th.FIXED}_${tn.FLOWED}`]: '0',\n  [`${th.FIXED}_${tn.HIDDEN}`]: '48px',\n  [`${th.FLOWED}_${tn.FIXED}`]: '0',\n  [`${th.FLOWED}_${tn.FLOWED}`]: '0',\n  [`${th.FLOWED}_${tn.HIDDEN}`]: '0',\n  [`${th.HIDDEN}_${tn.FIXED}`]: '32px',\n  [`${th.HIDDEN}_${tn.FLOWED}`]: '0',\n  [`${th.HIDDEN}_${tn.HIDDEN}`]: '0',\n};\nconst headerStyleMap = {\n  [`${th.FIXED}_${tn.FIXED}`]: { zIndex: 6, position: 'fixed' as const, left: '0', right: '0' },\n  [`${th.FIXED}_${tn.FLOWED}`]: { zIndex: 6, position: 'fixed' as const, left: '0', right: '0' },\n  [`${th.FIXED}_${tn.HIDDEN}`]: { zIndex: 6, position: 'fixed' as const, left: '0', right: '0' },\n  [`${th.FLOWED}_${tn.FIXED}`]: { marginTop: '32px' },\n  [`${th.FLOWED}_${tn.FLOWED}`]: {},\n  [`${th.FLOWED}_${tn.HIDDEN}`]: {},\n  [`${th.HIDDEN}_${tn.FIXED}`]: { display: 'none' },\n  [`${th.HIDDEN}_${tn.FLOWED}`]: { display: 'none' },\n  [`${th.HIDDEN}_${tn.HIDDEN}`]: { display: 'none' },\n};\nconst navBarStyleMap = {\n  [`${th.FIXED}_${tn.FIXED}`]: { position: 'fixed' as const, left: '0', right: '0', top: '48px' },\n  [`${th.FIXED}_${tn.FLOWED}`]: { marginTop: '48px' },\n  [`${th.FIXED}_${tn.HIDDEN}`]: { display: 'none' },\n  [`${th.FLOWED}_${tn.FIXED}`]: { position: 'fixed' as const, left: '0', right: '0', top: '0' },\n  [`${th.FLOWED}_${tn.FLOWED}`]: {},\n  [`${th.FLOWED}_${tn.HIDDEN}`]: { display: 'none' },\n  [`${th.HIDDEN}_${tn.FIXED}`]: { position: 'fixed' as const, left: '0', right: '0', top: '0' },\n  [`${th.HIDDEN}_${tn.FLOWED}`]: {},\n  [`${th.HIDDEN}_${tn.HIDDEN}`]: { display: 'none' },\n};\n\n// const fontColorOfLightBg = 'var(--theme-color)';\nconst fontColorOfLightBg = '#000000BF';\n\nexport function isHeaderAboveNavBar(n: St) {\n  const { topHeaderType, topNavBarType } = n;\n  if (topHeaderType === th.FLOWED && topNavBarType === tn.FIXED) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * MainContent 组件根节点样式\n */\nexport function contentLayoutStyle(n: St): React.CSSProperties {\n  const { siderViewType, topHeaderType, topNavBarType } = n;\n  // 给一个最小高度，确保路由组件在异步加载过程中，Footer出现在底部\n  const minHeight = 'calc(100vh - 45px)';\n  const paddingTop = paddingTopMap[`${topHeaderType}_${topNavBarType}`];\n  return { marginLeft: viewType2LeftValue[siderViewType], paddingTop, minHeight, overflowX: 'auto' };\n}\n\n/**\n * 顶部区域头部信息的布局样式\n */\nexport function headerStyle(n: St): React.CSSProperties {\n  const { headerTheme, siderViewType, topHeaderType, topNavBarType } = n;\n  const color = headerTheme === 'dark' ? 'white' : fontColorOfLightBg;\n  const backgroundColor = headerTheme === 'dark' ? '#001529' : 'white';\n  const marginLeft = viewType2LeftValue[siderViewType];\n  const toReturn = { marginLeft, backgroundColor, color, zIndex: 4 };\n  return { ...toReturn, ...headerStyleMap[`${topHeaderType}_${topNavBarType}`] };\n}\n\n/**\n * 顶部区域导航条的布局样式\n */\nexport function quickNavBarStyle(n: St): React.CSSProperties {\n  const { siderViewType, topHeaderType, topNavBarType } = n;\n  // 对于快捷导航条来说，不使用 marginLeft 方式来做导航条内容和边栏内容不重叠的效果\n  // 是为了考虑到导航条里的子元素使用 absolute 属性时能够配合导航条自身的 relative 正常工作\n  // 如使用 marginLeft，子元素 absolute 的同时设置的 right 等值会让子元素显示在导航条外部\n  const paddingLeft = viewType2LeftValue[siderViewType];\n  const toReturn = { boxSizing: 'border-box' as const, paddingLeft, zIndex: 5 };\n  return { ...toReturn, ...navBarStyleMap[`${topHeaderType}_${topNavBarType}`] };\n}\n\nexport function siderStyle(n: St): React.CSSProperties {\n  const { siderTheme, siderViewType } = n;\n  // 该颜色控制 settingIcon 在 header 里显示的颜色，会受是否暗黑主题色影响\n  const backgroundColor = siderTheme === 'dark' ? '#001529' : 'white';\n  let width = '0px';\n  if (siderViewType === COLLAPSED) {\n    width = '48px';\n  } else if (siderViewType === NOT_COLLAPSED) {\n    width = sys.siderWidthPx;\n  }\n  return { backgroundColor, width };\n}\n\n/**\n * 各种icon按钮的展示或样式控制（设置，登出、颜色模式等可通用）\n */\nexport function iconCtrl(n: St) {\n  const { topHeaderType, topNavBarType, headerTheme } = n;\n  // 该颜色控制 settingIcon 在 header 里显示的颜色，会受是否暗黑主题色影响\n  const color = headerTheme === 'dark' ? 'white' : fontColorOfLightBg;\n  let toReturn = { showInHeader: false, showInBar: false, showInBody: true, color };\n  if (topHeaderType !== th.HIDDEN) {\n    toReturn = { showInHeader: true, showInBar: false, showInBody: false, color };\n  }\n  if (topHeaderType === th.HIDDEN && topNavBarType !== tn.HIDDEN) {\n    toReturn = { showInHeader: false, showInBar: true, showInBody: false, color };\n  }\n  // 在body或bar中展示的话，颜色一定是主题色\n  if (toReturn.showInBody || toReturn.showInBar) toReturn.color = fontColorOfLightBg;\n  return toReturn;\n}\n\n/**\n * 计算控制logo显示的各种参数\n */\nexport function logoCtrl(n: St) {\n  const { siderTheme, headerTheme, siderViewType, siderLogoType } = n;\n  const shortWidth = '48px';\n  const toReturn = { showLabel: false, label: '', imgUrl: '', color: '', width: '0px', shortWidth };\n  if (siderLogoType === SiderLogoTypes.IMG_AND_LABEL) {\n    toReturn.label = notCollapsedLogoLabel || 'need system name';\n  } else {\n    const label = siderViewType === SiderViewTypes.COLLAPSED ? collapsedLogoLabel : notCollapsedLogoLabel;\n    toReturn.label = label || 'need system name';\n  }\n\n  let themeValue = headerTheme;\n  toReturn.width = siderWidthPx;\n  if ([SiderViewTypes.COLLAPSED, SiderViewTypes.NOT_COLLAPSED].includes(siderViewType)) {\n    themeValue = siderTheme;\n    toReturn.width = siderViewType === COLLAPSED ? shortWidth : siderWidthPx;\n  }\n  // 文字型 logo 的字体颜色\n  const color = themeValue === 'dark' ? 'white' : 'var(--theme-color)';\n  toReturn.color = color;\n\n  // const imgUrlList = logoKey2ImgUrlList[`${themeValue}_${siderViewType}`];\n  const imgUrlList = logoKey2ImgUrlList[themeValue];\n  if (!imgUrlList) {\n    toReturn.showLabel = true;\n  }\n  const imgUrl = imgUrlList[0] || imgUrlList[1];\n  if (!imgUrl) {\n    toReturn.showLabel = true;\n  } else {\n    toReturn.imgUrl = imgUrl;\n  }\n\n  return toReturn;\n}\n\ninterface ISiderInfo {\n  iconDes: 'left' | 'right';\n  /** 边栏是否是展开的，true：展开，false：折叠 */\n  isUnfold: boolean;\n  /** 边栏是否可见，true：可见，false：不可见 */\n  showSider: boolean;\n}\nexport function siderInfo(n: St): ISiderInfo {\n  const { siderViewType } = n;\n  const iconDes = siderViewType === HIDDEN ? 'right' : 'left';\n  const isUnfold = siderViewType === NOT_COLLAPSED;\n  const showSider = siderViewType !== HIDDEN;\n  return { iconDes, isUnfold, showSider };\n}\n\nexport function siderThemeSwitchChecked(n: St) {\n  const { siderTheme } = n;\n  return siderTheme === 'dark';\n}\n\nexport function headerThemeSwitchChecked(n: St) {\n  const { headerTheme } = n;\n  return headerTheme === 'dark';\n}\n\nexport function navBarItemCls(n: St) {\n  return n.isTabPaneHeavyBg ? 'quickNavBarWrap' : 'quickNavBarLightWrap';\n}\n","import { IDispatch } from 'concent';\nimport * as rd from './reducer';\nimport * as staffServ from 'services/staff';\nimport * as colorServ from 'services/color';\nimport { St } from './meta';\n\nexport function loaded(dispatch: IDispatch, moduleState: St) {\n  const { themeColor, fontAlpha } = moduleState;\n  // 写入当前配置主题色\n  dispatch(rd.changeThemeColor, { themeColor });\n  // 改变颜色无其他逻辑，直接调用 changeFontAlpha 即可\n  colorServ.changeFontAlpha(fontAlpha);\n  staffServ.initData();\n}\n","import { defWatch } from 'concent';\nimport { LS_C2PRO_SETTINGS, SiteColorTypes } from 'configs/constant/sys';\nimport { St } from './meta';\n\n// 记录关系的设置变化，方便用户刷新后，恢复最近的设置\nexport const settingsKeyChange = defWatch<St>((n, o, f) => {\n  const {\n    siderViewType, siderViewTypeBackup, topHeaderType, topNavBarType, curActiveRoutePath,\n    curActiveRouteFullPath, activeRoutePaths, siteColorType, allowWaterMark,\n    themeColor, headerTheme, siderTheme, custThemeColor, fontAlpha, isTabPaneHeavyBg,\n  } = n;\n  if (f.isFirstCall) return;\n\n  const str = JSON.stringify({\n    siderViewType, siderViewTypeBackup, topHeaderType, topNavBarType, curActiveRoutePath,\n    curActiveRouteFullPath, activeRoutePaths, siteColorType, allowWaterMark,\n    themeColor, headerTheme, siderTheme, custThemeColor, fontAlpha, isTabPaneHeavyBg,\n  });\n  localStorage.setItem(LS_C2PRO_SETTINGS, str);\n}, { immediate: true });\n\nexport const watchDarkSiteChange = defWatch<St>((n, o, f) => {\n  const { siteColorType } = n;\n  let newFilter = '';\n  if (siteColorType === SiteColorTypes.DARK) {\n    newFilter = 'invert(.9) hue-rotate(200deg)';\n  } else if (siteColorType === SiteColorTypes.GREY) {\n    newFilter = 'grayscale(1)';\n  }\n\n  const htmlDom = document.querySelector('html');\n  if (htmlDom) {\n    const oldFilter = htmlDom.style.filter;\n    if (newFilter !== oldFilter) htmlDom.style.filter = newFilter;\n  }\n}, { immediate: true });\n","import state from './state';\nimport * as reducer from './reducer';\nimport * as computed from './computed';\nimport * as lifecycle from './lifecycle';\nimport * as watch from './watch';\n\nexport default {\n  state, reducer, computed, lifecycle, watch,\n};\n","import { St } from './state';\n\n// only value change will triiger this function to execute again\nexport function doubleCount({ value }: St) {\n  return value * 2;\n}\n","import { St } from './state';\nimport { VoidPayload, AC } from 'types/store';\nimport { T_COUNTER } from 'configs/c2Mods';\n\ntype IAC = AC<T_COUNTER>;\n\nconst delay = (ms = 1000) => new Promise(r => setTimeout(r, ms));\n\nexport function incrementBigValue(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { bigValue: moduleState.bigValue + 50 };\n}\n\nexport function incrementOne(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value + 1 };\n}\n\nexport function decrementOne(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value - 1 };\n}\n\nexport function increment(payload: VoidPayload, moduleState: St): Partial<St> {\n  return { value: moduleState.value + moduleState.toInc };\n}\n\nexport function incBy(payload: number, moduleState: St): Partial<St> {\n  return { value: moduleState.value + payload };\n}\n\nexport async function incrementAsync(payload: VoidPayload, moduleState: St, ac: IAC): Promise<Partial<St>> {\n  await delay();\n  // or just write ac.dispatch of return\n  // await ac.dispatch(incrementByAmount, amount);\n  return { value: moduleState.value + moduleState.toInc };\n}\n\nexport function foo() {\n  console.log('call foo');\n}\n\nexport function clear() {\n  console.log('call clear');\n}\n","import { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n\n// 当前模块的第一个组件实例挂载完毕时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  state,\n  computed,\n  reducer,\n  lifecycle,\n};\n","\nfunction getInitialState() {\n  return {\n    value: 0,\n    bigValue: 100,\n    toInc: 2,\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","\nfunction getInitialState() {\n  return {\n    value: 0,\n    bigValue: 100,\n    keyword: '',\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","import { St } from './state';\n\n// only value change will triiger this function to execute again\nexport function doubleCount({ value }: St) {\n  return value * 2;\n}\n\nexport function formattedInput({ keyword }: St) {\n  return `用户正在输入 ${keyword}`;\n}\n\n","\nexport function purify(url: string) {\n  const [pureUrl] = url.split('?');\n  return pureUrl;\n}\n","/* eslint-disable */\nimport cute from 'cute-http';\nimport qs from 'qs';\nimport axios from 'axios';\nimport * as messageService from './message';\nimport * as objUtil from 'utils/obj';\nimport * as timerUtil from 'utils/timer';\nimport * as urlUtil from 'utils/url';\nimport * as c2Serv from 'services/concent';\n// import resData from 'assets/response-data';\n\nexport interface IReqOptions {\n  /**\n   * default = true, 是否返回服务器端响应的业务逻辑数据给调用方\n   * 服务器完整的返回数据reply形如：{data:any, code:string, msg:string},\n   * true：返回reply.data\n   * false：返回reply,\n   */\n  returnLogicData?: boolean;\n  defaultValue?: any;\n  /**\n   * 请求的业务前缀，默认 undefined，仅当用户需要根据前缀来区分不同环境时，才需要定义\n   * 调用语句示例 httpService.get(url:string, data:IDataPrams, { bizServiceName: string })\n   * url: '/some/action', bizServiceName: 'category-test' ---> '/category-test/some/action'\n   * url: '/some/action', bizServiceName: 'category' ---> '/category/some/action'\n   * url: '/some/action', bizServiceName: 'www.a.com/xx' ---> 'www.a.com/xx/some/action'\n   * 但要注意调用url包含了协议时，定义的 bizServiceName 是无效的，并不会影响实际发起的请求\n   * url: 'http://www.a.com/some/action', bizServiceName: 'www.b.com/xx' ---> 'http://www.a.com/some/action''\n   *\n   * 推荐用户写个函数获取当前调用api的业务前缀，如 getCateApiPrefix(): 'category' | 'category-test'\n   * 然后动态的传递给 httpService.get 调用，此时调用语句形如：\n   * httpService.get('/some/action', null, { bizServiceName: getCateApiPrefix() })\n   *\n   * 此前缀不影响 assets/mock/apiData/index.ts 文件的key映射\n   * 调用 httpService.get('/some/action', null, { bizServiceName: 'category' })\n   * key 依然是写 'get /some/action'\n   */\n  bizServiceName?: string,\n  /**\n   * default = true\n   * 是否检查服务返回code，并做错误提示\n   */\n  check?: boolean;\n  /**\n   * default = true\n   * 当check为true时生效，是否alert提示错误信息\n   */\n  alertErrorMsg?: boolean;\n}\n\ntype DataParams = Record<string, any> | null;\ninterface MultiItem {\n  url: string;\n  data: DataParams;\n}\n\ncute.setConfig({\n  retryCount: 3, // 重试次数\n  timeout: 50000, // 超时时间\n  // debug: true, // 打开debug模式\n});\n\nconst getXFormOptions = () => ({\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n  },\n  withCredentials: true,\n});\nconst generalOptions = {\n  headers: { 'Content-Type': 'application/json' },\n  withCredentials: true,\n  mockData: null as any,\n\n  // replyReceived: (reply, m) => {\n  //   // console.log('reply.config.url', reply.config.url);\n  //   cute.post('/collectData', { data: reply.data, method: m, url: reply.config.url }, {\n  //     headers: { 'Content-Type': 'application/json' },\n  //     withCredentials: true,\n  //   });\n  // }\n};\n\n// 测试模式，拦截请求，直接响应mock数据\n// if (process.env.TEST_MODE === '1') {\n//   generalOptions.mockData = (method: string, url: string, inputData: any) => {\n//     const key = `${method}${url}`;\n//     // console.log(`return mock data for ${key}`);\n//     return Promise.resolve({ data: resData[key] });\n//   }\n// }\n\nfunction seperateOptions(options: any = {}) {\n  const {\n    returnLogicData, defaultValue = '', check = true, alertErrorMsg = true,\n    failStrategy = cute.const.KEEP_ALL_BEEN_EXECUTED, bizServiceName = '', ...cuteOptions\n  } = options;\n  // cute-http的调用相关可选参数\n  cuteOptions.failStrategy = failStrategy;\n  return { logicOptions: { returnLogicData, defaultValue, check, alertErrorMsg, bizServiceName }, cuteOptions };\n}\n\nconst checkCode = (axiosReply: any, url = '', checkOptions: IReqOptions = {}) => {\n  const { returnLogicData = true, check = true } = checkOptions;\n\n  const { statusCode = 0 } = axiosReply;\n  const httpResponse = axiosReply.data || axiosReply;\n\n  if (statusCode >= 400) throw new Error(`服务器内部错误${statusCode}`);\n  const { status = '0', message = '接口格式错误', response, code, data, msg } = httpResponse;\n  const errMsg = msg || message;\n\n  let toReturn = null;\n  // 直接返回 axiosReply.data, 即服务器返回的原始数据\n  if (!returnLogicData) {\n    toReturn = httpResponse;\n  } else {\n    // 服务端返回的业务相关的数据\n    toReturn = data || response;\n  }\n\n  if (!check) return toReturn;\n\n  // 这里 status 和 code 都要判断......\n  if (typeof status !== 'undefined' && status != '0') {\n    const err = new Error(errMsg) as any;\n    err.status = status;\n    err.url = url;\n    throw err;\n  }\n\n  if (typeof code !== 'undefined' && code != 0) {\n    throw new Error(`url: ${url} ${errMsg}`);\n  }\n\n  return toReturn;\n};\n\nconst attachPrefixAndData = (url: string, data: DataParams | '', bizServiceName?: string) => {\n  const pureUrl = url.replace(/ /g, '');\n  let prefixedUrl = `${pureUrl}`;\n\n  if (!pureUrl.startsWith('http')) {\n    if (bizServiceName) {\n      if (bizServiceName.startsWith('http')) prefixedUrl = `${bizServiceName}${pureUrl}`;\n      else prefixedUrl = `/${bizServiceName}${pureUrl}`;\n    }\n  }\n\n  if (!objUtil.isNull(data)) {\n    const dataQueryStr = qs.stringify(data);\n    if (pureUrl.includes('?')) return `${prefixedUrl}&${dataQueryStr}`;\n    return `${prefixedUrl}?${dataQueryStr}`;\n  }\n\n  return prefixedUrl;\n};\n\nfunction handleError(error: any, options: any, defaultValue: any) {\n  if (!defaultValue) {\n    if (options.check && options.alertErrorMsg) messageService.error(error.message);\n    throw error;\n  }\n  if (error && error.response && error.response.status >= 400) {\n    messageService.error(`服务器内部错误 ${error.response.status}`);\n  }\n\n  // 返回默认值\n  return defaultValue;\n}\n\nasync function sendRequest(method: string, url: string, data?: DataParams, options = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n\n  try {\n    const mergedOpt = { ...generalOptions, ...cuteOptions };\n    let reply;\n    const { isInnerMock, excludedMockApis } = c2Serv.getGlobalState();\n\n    const getRealReply = async () => {\n      let reply;\n      if (method === 'get') {\n        reply = await cute[method](attachPrefixAndData(url, data || '', bizServiceName), '', mergedOpt);\n      } else {\n        reply = await cute[method](attachPrefixAndData(url, '', bizServiceName), data, mergedOpt);\n      }\n      return reply;\n    };\n\n    if (isInnerMock) {\n      const { mockImpl } = await import('../assets/mock/mockHttpService');\n      if (method === 'get' || method === 'post') {\n        await timerUtil.delay(300);\n        const fakeHttp = mockImpl();\n        const isUrlBeenMocked = fakeHttp.hasMockedFn(method, url);\n        // 已实现mock、没在排除名单里\n        if (isUrlBeenMocked && !excludedMockApis.includes(`${method} ${urlUtil.purify(url)}`)) {\n          const mockResult = fakeHttp[method](url, data);\n          // 包裹成类 axiosReply 对象\n          reply = { statusCode: 200, data: mockResult };\n        } else {\n          reply = await getRealReply();\n        }\n      } else {\n        throw new Error(`method[${method}] not implemented in mockHttpService`);\n      }\n    } else {\n      reply = await getRealReply();\n    }\n\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function get(url: string, data?: DataParams, options?: IReqOptions) {\n  return sendRequest('get', url, data, options);\n}\n\nasync function post(url: string, body?: DataParams, options?: IReqOptions) {\n  return sendRequest('post', url, body, options);\n}\n\nasync function put(url: string, body?: DataParams, options?: IReqOptions) {\n  return sendRequest('put', url, body, options);\n}\n\n/**\n * 以application/x-www-form-urlencoded的形式提交数据\n * TODO: 删除postFormData\n * @param {*} url\n * @param {*} data\n * @param {*} options\n */\nasync function sendXForm(method: string, url: string, data: DataParams, options = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  try {\n    const xFormOptions = getXFormOptions();\n    const mergedOpt = { ...xFormOptions, ...cuteOptions };\n\n    let _data = data;\n    if (objUtil.isObject(data)) {\n      _data = {};\n      for (let key in data) {\n        const val = data[key];\n        // x-www-form提交的话，对象 {} [] 都要转为string\n        _data[key] = objUtil.isObject(val) ? JSON.stringify(val) : val;\n      }\n    }\n\n    const reply = await cute[method](attachPrefixAndData(url, '', bizServiceName), qs.stringify(_data), mergedOpt);\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function xFormPost(url: string, data: DataParams, options = {}) {\n  return sendXForm('post', url, data, options);\n}\n\nasync function xFormPut(url: string, data: DataParams, options = {}) {\n  return sendXForm('put', url, data, options);\n}\n\nasync function multiGet(urls: string[], options: IReqOptions = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  try {\n    delete options.returnLogicData;\n    const _urls = urls.map(url => attachPrefixAndData(url, '', bizServiceName));\n    const replyList: any[] = await cute.multiGet(_urls, { ...generalOptions, ...cuteOptions });\n    return replyList.map((r, idx) => checkCode(r, _urls[idx], { returnLogicData, check }));\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\nasync function multiPost(items: MultiItem[], options: IReqOptions = {}) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n\n  try {\n    delete options.returnLogicData;\n    items.forEach(item => item.url = attachPrefixAndData(item.url, '', bizServiceName));\n    const replyList: any[] = await cute.multiPost(items, { ...generalOptions, ...cuteOptions });\n    return replyList.map((r, idx) => checkCode(r, items[idx].url, { returnLogicData, check }));\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\n/**\n * 通常用于文件提交\n * Content-Type 为 multipart/form-data\n */\nasync function postFormData(url: string, data: DataParams, options: IReqOptions) {\n  const { logicOptions, cuteOptions } = seperateOptions(options);\n  const { returnLogicData, defaultValue = '', check = true, bizServiceName } = logicOptions;\n  const finalUrl = attachPrefixAndData(url, '', bizServiceName);\n\n  const formData = new FormData();\n  data && Object.keys(data).forEach((key) => {\n    const val = data[key];\n    if (Object.prototype.hasOwnProperty.call(data, key) && !!data[key]) {\n      if (val instanceof File) {\n        formData.append(key, val);\n      } else {\n        const appendVal = objUtil.isObject(val) ? JSON.stringify(val) : val;\n        formData.append(key, appendVal);\n      }\n    }\n  });\n\n  const instance = axios.create({ withCredentials: true });\n\n  try {\n    const reply = await instance.post(finalUrl, formData, cuteOptions);\n    return checkCode(reply, url, { returnLogicData, check });\n  } catch (err) {\n    return handleError(err, options, defaultValue);\n  }\n}\n\n/**\n *\n * @param {string} url - 请求地址\n * @param {Record<string, any>} data - ost请求需要的参数\n */\nfunction downloadFile(url: string, data: Record<string, any> = {}) {\n  const form = document.createElement('form');\n  form.style.display = 'none';\n  form.action = url;\n  form.method = 'post';\n  document.body.appendChild(form);\n  if (data) {\n    // 动态创建input并给value赋值\n    for (const key in data) {\n      const input = document.createElement('input');\n      input.type = 'hidden';\n      input.name = key;\n      const val = data[key];\n      input.value = objUtil.isObject(val) ? JSON.stringify(val) : val;\n      form.appendChild(input);\n    }\n  }\n  form.submit();\n  form.remove();\n}\n\nexport default {\n  downloadFile,\n  get,\n  put,\n  post,\n  xFormPost,\n  xFormPut,\n  postFormData,\n  multiGet,\n  multiPost,\n};\n","import http from 'services/http';\n\nexport async function getTodoList() {\n  const ret = await http.get('/api/todo/list');\n  return ret;\n}\n\nexport async function queryTodoList(data: { keyword: string }) {\n  const ret = await http.get('/api/todo/query', data);\n  return ret;\n}\n","import * as todoServ from 'services/domain/todo';\nimport { VoidPayload, AC } from 'types/store';\nimport { St } from './state';\n\ntype IAC = AC<'Counter'>;\n\nexport function forCopy(payload: VoidPayload, moduleState: St, ac: IAC) {\n  console.log('call ac.setState or ac.dispatch when needed', ac.setState);\n}\n\ninterface FetchListPayload {\n  current: number,\n  pageSize: number,\n}\nexport async function fetchList({ current, pageSize }: FetchListPayload, moduleState: St) {\n  const ret = await todoServ.getTodoList();\n  return { pageList: ret.list, total: ret.total };\n}\n\nexport function foo() {\n  console.log('call foo');\n}\n\nexport function clear() {\n  console.log('clear');\n  return { value: 1 };\n}\n\nexport function addBig(payload: VoidPayload, moduleState: St) {\n  const { bigValue } = moduleState;\n  return { bigValue: bigValue + 1 };\n}\n","\n/*\n|--------------------------------------------------------------------------\n| 定义模块的lifecyle\n|--------------------------------------------------------------------------\n| 文档:  https://concentjs.github.io/concent-doc/guide/concept-module-lifecycle\n*/\nimport { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n// 模块被concent加载完毕时触发，(可替代initState，将初始化逻辑移到reducer文件里)\n// export function loaded(dispatch: IDispatch) {}\n\n// 当前模块的第一个组件实例挂载完毕时触发，\n// 默认只触发一次，如需满足条件反复触发，return false即可\n// 注意此函数触发时机和实例相关，如果没有任何属于此模块的组件实例化，该函数不会被触发\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认只触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as computed from './computed';\nimport * as reducer from './reducer';\nimport * as lifecycle from './lifecycle';\n\n\nexport default {\n  state,\n  reducer,\n  computed,\n  lifecycle,\n}\n","import { T_DEMO } from 'configs/c2Mods';\nimport { VoidPayload, AC } from 'types/store';\nimport { St } from './state';\nimport http from 'services/http';\n\ntype IAC = AC<T_DEMO>;\n\nexport function aNormalMethod(payload: VoidPayload, moduleState: St, actionCtx: IAC) {\n  console.log('for copy - ', actionCtx.dispatch);\n}\n\nexport function changeDesc(payload: string | VoidPayload, moduleState: St, actionCtx: IAC) {\n  let desc = `module--${actionCtx.module} ${Date.now()}`;\n  if (payload) {\n    if (typeof payload === 'string') {\n      desc = payload;\n    } else {\n      desc = `module--${actionCtx.module} ${payload.currentTarget.nodeName} ${Date.now()}`;;\n    }\n  }\n  return { desc };\n}\n\ninterface FetchListP{\n  current: number,\n  pageSize: number,\n}\nexport async function fetchList({ current, pageSize }: FetchListP): Promise<{ pageList: any[], total: number }> {\n  const todos = await http.get('api/todos');\n  console.log(current, pageSize, todos);\n  return { pageList: todos, total: 1000 };\n}\n\nexport function foo(){\n  console.log('call foo');\n}\n\nexport function clear(){\n  console.log('clear');\n}\n","import { St } from './state';\n\nexport function revesedDesc(n: St) {\n  return n.desc.split('').reverse().join('');\n}\n","import { IDispatch } from 'concent';\nimport * as reducer from './reducer';\n\n\n// 异步状态初始化函数\n// export async function initState(){}\n\n\n// 当前模块的第一个组件实例挂载完毕时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function mounted(dispatch: IDispatch) {\n  dispatch(reducer.foo);\n}\n\n// 当前模块的最后一个组件实例卸载时触发\n// 默认值触发一次，如需满足条件反复触发，return false即可\nexport function willUnmount(dispatch: IDispatch) {\n  dispatch(reducer.clear);\n}","import state from './state';\nimport * as reducer from './reducer';\nimport * as computed from './computed';\nimport * as lifecycle from './lifecycle';\n\nexport default {\n  state,\n  reducer,\n  computed,\n  lifecycle,\n};\n","\nfunction getInitialState() {\n  return {\n    num: 1,\n    desc: 'this is a demo model!!!!!',\n  };\n}\n\nexport type St = ReturnType<typeof getInitialState>;\n\nexport default getInitialState;\n","// 需要全局共享的model，提升到这里导出\n// 然后全局可以使用 services/concent 里的 useC2Mode(modName) 来拿到目标模块了\nimport HomeModel from 'pages/Home/model';\n\nexport { default as $$global } from './global'; // 覆写concent内置的$$global模块\nexport { default as Counter } from './counter';\nexport { default as TodoList } from './todolist';\nexport { default as Demo } from './_demo';\n\n// 暴露为 Home 命名空间挂到全局store上\nexport const Home = HomeModel.Home;\n","import cc, { run, configure, Plugin } from 'concent';\nimport { isSubApp, setMasterAppLoadedSignal } from 'services/appEnv';\nimport reduxDevToolPlugin from 'concent-plugin-redux-devtool';\nimport * as msgService from 'services/message';\nimport * as commonUtil from 'utils/common';\nimport * as models from '../models';\n\nif (window.__MASTER_APP_LOADED__ === undefined) {\n  setMasterAppLoadedSignal();\n}\n\nconst plugins: Plugin[] = [];\n// 建议生产环境关闭redux-dev-tool\nif (commonUtil.isLocalMode()) {\n  plugins.push(reduxDevToolPlugin);\n}\n\n\n// 是子应用且非本地开发调试模式，仅载入业务model即可\n// 当前子应用和基座应用共享global模块\nif (isSubApp() && process.env.REACT_APP_IS_LOCAL !== 'true') {\n  const { $$global, ...rest } = models;\n  configure(rest as any, { allowDup: true });\n} else {\n  run(models, {\n    errorHandler: (err) => {\n      msgService.error(err.message);\n    },\n    plugins,\n    middlewares: [(midCtx, next) => {\n      console.warn(midCtx);\n      next();\n    }],\n    alwaysRenderCaller: true,\n    isStrict: true,\n  });\n  cc.bindCcToWindow('');\n};\n","/**\n * concent 相关的一些公共封装函数\n */\nimport {\n  useConcent, reducer, getState as getSt, getGlobalState as getGst, emit, getComputed,\n  IActionCtxBase, cst, MODULE_DEFAULT, MODULE_GLOBAL,\n  ICtxBase, IAnyObj, SettingsType, ComputedValType, SetupFn, MultiComputed, CallTargetParams,\n} from 'concent';\nimport { noop } from 'utils/fn';\nimport { CtxM, CtxMConn, CtxConn, Modules, RootRd, RootState, RootCu } from 'types/store';\nimport { EvMap } from 'types/eventMap';\n\nfunction priBuildCallParams(moduleName: Modules, connect: Array<Modules>, options?: Options<any, any, any, any, any, any>) {\n  const targetOptions = options || {};\n  const { setup, tag, extra, staticExtra, cuDesc, passCuDesc = true, props = {}, ccClassKey } = targetOptions;\n  const regOpt = { module: moduleName, connect, setup, props, tag, extra, staticExtra, cuDesc: null as any };\n  if (passCuDesc) regOpt.cuDesc = cuDesc;\n  return { regOpt, ccClassKey };\n}\n\n/**\n * 调用目标函数，用于对接 reducer里的 ghost函数\n * @param callerParams\n * @param ac\n */\nexport async function callTarget<T extends any = any>(callerParams: CallTargetParams, ac: IActionCtxBase, errHandler?: (err: Error) => void): Promise<T> {\n  let ret: T = {} as any;\n  try {\n    // 支持 reducer文件里内部调用 ac.dispatch(loading, fnPayload(targetFn, payload))\n    if (Array.isArray(callerParams)) {\n      ret = await Function.prototype.apply.call(ac.dispatch, ac, callerParams);\n    } else {\n      const { fnName, payload, renderKey, delay } = callerParams;\n      ret = await ac.dispatch(fnName, payload, renderKey, delay) as unknown as any;\n    }\n  } catch (err) {\n    if (errHandler) errHandler(err);\n    throw err;\n  }\n  return ret;\n}\n\nexport interface ValidSetup {\n  (ctx: ICtxBase): IAnyObj | void;\n}\nexport interface ValidMapProps {\n  (ctx: ICtxBase): IAnyObj;\n}\nexport interface OptionsBase<\n  P extends IAnyObj,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > {\n  props?: P;\n  tag?: string;\n  ccClassKey?: string;\n  extra?: Extra;\n  staticExtra?: StaticExtra;\n  /**\n   * 一个遗留的参数，对接useConcent的mapProps，每一轮渲染都会调用，返回结果可通过 ctx.mapped拿到\n   */\n  mapProps?: Mp;\n  cuDesc?: CuDesc;\n  /**\n   * 是否透传 cuSpec 给 useConcent函数，默认为true，\n   * 表示需要透传，此时用户不需要再setup函数体内调用 ctx.computed(cuSpec)\n   * 如果用户设置passCuSpec为false，表示传入 cuSpec 仅为了方便推导出refComputed类型，但不透传 cuSpec 给 useConcent函数\n   * 注意此时用户需要在 setup函数体内调用 ctx.computed(cuSpec) 来完成示例计算函数的定义，\n   * 否则 refComputed 里拿不到真正的计算结果\n   */\n  passCuDesc?: boolean;\n}\nexport interface Options<\n  P extends IAnyObj,\n  Setup extends ValidSetup,\n  CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj,\n  StaticExtra extends any,\n  Mp extends ValidMapProps\n  > extends OptionsBase<P, CuDesc, Extra, StaticExtra, Mp> {\n  setup?: Setup;\n}\n\n/**\n * 属于某个模块\n * use the target model context you want by passing a module name\n * 如需要全局任意地方可通过 useC2Mod('xx') 导出xx模块上下文来使用，\n * 需要在 src/models/index.js 显式的导出该模块\n *\n * -----------------------[Export example]-----------------------\n * ```js\n * import somePageModel from 'pages/SomePage/model';\n * import someCompModel from 'components/SomeComp/model';\n * const allModels = {...somePageModel,  ...someCompModel};\n * ```\n * ---------------------------------------------------------------\n *\n * 各种调用示例：\n * 需自己跳转到 components/_demosOfHook/useC2Mod 文件里查看\n * @see {useC2ModDemos.Example} - 简单示例\n * @see {useC2ModDemos.ExampleCallMr} - 调用moduleReducer\n * @see {useC2ModDemos.ExampleReadMcu} - 读取模块计算结果\n * @see {useC2ModDemos.ExampleSetup} - 配置setup\n * @see {useC2ModDemos.ExampleRefCu} - 定义实例计算\n * @param moduleName\n * @param options {Options} - 可选参数，见 Options定义\n */\nexport function useC2Mod<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 使用默认模块（在没有重写$$default模块的情况下，默认模块是一个空模块）\n * @param options\n * @returns\n */\nexport function useC2DefaultMod<\n  Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], options);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 属于某个模块，连接多个模块\n */\nexport function useC2ModConn<\n  M extends Modules, Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(moduleName, connect, options);\n  type Ctx = CtxMConn<P, M, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 连接多个模块\n * ```js\n *  const { connectedState, cr } = useC2Conn(['mod1', 'mod2']);\n *  // connectedState.mod1.stateXxx\n *  // cr.mod1.methodXxx\n *\n * ```\n */\nexport function useC2Conn<\n  Conn extends Array<Modules>, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(connect: Conn, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) {\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, connect, options);\n  type Ctx = CtxConn<P, Conn[number], SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return useConcent<{}, Ctx>(regOpt, ccClassKey);\n}\n\n/**\n * 适用于不属于任何模块，只是设置setup函数的场景\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetup<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const { settings } = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return settings;\n}\n\n/**\n * useSetupCtx 会返回整个ctx对象，区别于 useSetup 只返回 settings\n * @param setup\n * @param options - see OptionsBase\n */\nexport function useSetupCtx<\n  T extends SetupFn, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(setup: T, options?: OptionsBase<P, CuDesc, Extra, StaticExtra, Mp>) {\n  const mergedOptions = { setup, ...options };\n  const { regOpt, ccClassKey } = priBuildCallParams(cst.MODULE_DEFAULT, [], mergedOptions);\n  type Ctx = CtxM<P, MODULE_DEFAULT, SettingsType<T>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  const ctx = useConcent<{}, Ctx>(regOpt, ccClassKey);\n  return ctx;\n}\n\n\n/**\n * 为属于某个模块的 ctx 标记类型, 通常使用在class成员变量上 和 setup函数体内\n * 在class组件成员变量使用时不需要传递第三位参数ctx，组件实例化时会由concent注入并替换\n * 在setup函数里使用时，可直接传入已经创建好的ctx\n */\nexport function typeCtxM<\n  M extends Modules, Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n  Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n  >(moduleName: M, options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>, ctx?: any) {\n  noop(moduleName, options);\n  type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n  return (ctx || {}) as Ctx;\n}\n\n/**\n * useC2Mod的工厂函数，返回钩子函数的同时，也提供了帮助推导setup函数的ctx参数类型的辅助函数\n * 注意! 此工厂函数仅适用于 setup函数ctx参数不需要感知 props, extra 类型时，方可使用\n * @param moduleName\n * @param options\n * -----------------------[Code example]-----------------------\n * ```js\n *  const ret = makeUseC2Mod(\"Counter\");\n *   function setupA1(c: any) {\n *    const ctx = ret.typeCtx(c);\n *     const cu = ctx.computed({countX6: (n) => n.value * 6 });\n *     return { cu };\n *   }\n *   export function UseC2ModByFactory() {\n *     const ctx = ret.useC2Mod({ setup: setupA1 });\n *     return <h1>{ctx.state.bigValue} {ctx.settings.cu.countX6}</h1>\n *   }\n * ```\n * --------------------------------------------------------------\n */\nexport function makeUseC2Mod<M extends Modules>(moduleName: M) {\n  return {\n    /**\n     * 需要传入的 setup 函数\n     */\n    useC2Mod: <Setup extends ValidSetup, P extends IAnyObj, CuDesc extends MultiComputed<any>,\n      Extra extends IAnyObj, StaticExtra extends any, Mp extends ValidMapProps,\n      >(options?: Options<P, Setup, CuDesc, Extra, StaticExtra, Mp>) => {\n      const { regOpt, ccClassKey } = priBuildCallParams(moduleName, [], options);\n      type Ctx = CtxM<P, M, SettingsType<Setup>, ComputedValType<CuDesc>, [Extra, StaticExtra, ReturnType<Mp>]>;\n      return useConcent<P, Ctx>(regOpt, ccClassKey);\n    },\n    /**\n     * 推导setup函数的ctx参数类型\n     */\n    typeCtx: (ctx: ICtxBase) => {\n      return ctx as CtxM<{}, M>;\n    },\n  };\n}\n\nexport const ccReducer = (reducer as unknown) as RootRd;\n\n/**\n * 获取 global模块的状态\n * 在已拥有 concent model 上下文、action 上下文的地方，\n * 推荐直接获取，代替调用此函数，因为直接获取数据时组件并不会订阅数据变化\n */\nexport function getGlobalState() {\n  const globalState = getGst<RootState>();\n  return globalState;\n}\n\n/**\n * 获取整个根状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getRootState() {\n  const rootState = getSt<RootState>();\n  return rootState;\n}\n\n/**\n * 获取目标模块状态\n * 注意直接获取数据时组件并不会订阅数据变化\n */\nexport function getModelState<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelState = getSt<RootState, T>(modelName);\n    return modelState;\n  }\n  throw new Error('miss modelName');\n}\n\n/**\n * 获取目标模块状态\n */\nexport function getModelComputed<T extends Modules>(modelName: T) {\n  if (modelName) {\n    const modelComputed = getComputed<RootCu, T>(modelName);\n    return modelComputed;\n  }\n  throw new Error('miss modelName');\n}\n\n/**\n * 获取 global模块的状态\n * 在已拥有 concent model 上下文、action 上下文的地方，\n * 推荐直接获取，代替调用此函数，因为直接获取数据时组件并不会订阅数据变化\n */\nexport function getGlobalComputed() {\n  const globalComputed = getComputed<RootCu, MODULE_GLOBAL>(cst.MODULE_GLOBAL);\n  return globalComputed;\n}\n\ntype EvKeys = keyof EvMap;\n/**\n * 发射事件\n * @param eventName - 事件名\n * @param args\n */\nexport function ccEmit<E extends EvKeys, T extends EvMap[E]>(eventName: E, ...args: T) {\n  emit(eventName, ...args);\n}\n\n/**\n * 携带id的发射事件\n * @param eventDesc - [eventName, id]\n * @param args\n */\nexport function ccEmitId<E extends EvKeys, T extends EvMap[E]>(eventDesc: [E, string], ...args: T) {\n  emit(eventDesc, ...args);\n}\n\ntype OnFn = <E extends EvKeys>(eventName: E, cb: (...args: EvMap[E]) => void) => void;\n/**\n * 配合EvMap，为ctx.on装配类型\n * 外部调用时传入具体的事件名就推导出cb函数的参数列表类型\n *\n    function setup(ctx: Ctx){\n      const on = ctxOn(ctx);\n      on('xxx',(a, b)=>{\n       // 此处ts能感知a、b的具体类型\n      })\n    }\n */\nexport function ctxOn(ctx: ICtxBase) {\n  return ctx.on as OnFn;\n}\n\ntype OnIdFn = <E extends EvKeys>(eventDesc: [E, string], cb: (...args: EvMap[E]) => void) => void;\n/**\n * 可以携带id的ctx.on\n * @param ctx\n */\nexport function ctxOnId(ctx: ICtxBase) {\n  return ctx.on as OnIdFn;\n}\n","\nexport const siderWidth = 200;\nexport const siderWidthPx = `${siderWidth}px`;\n/** 最底层的背景色 */\nexport const buttomBgColor = '#f0f2f5';\nexport const contentBgColor = '#fff';\nexport const siteThemeColor = '#1976d2';\n/** 水印文案 */\nexport const waterMarkLabel = 'concent-pro';\n\nconst img1 = 'https://raw.githubusercontent.com/fantasticsoul/assets/master/c2pro/c2pro-banner.png';\n// 展开时两种主题色的logo长图设置，可按实际情况填写不同的url，如无素材填写0长字符串，保证 notCollapsedLogoLabel 有文案即可\n/** 展开时浅色主题长图 */\nexport const notCollapsedLogoImg = img1;\n/** 展开时深色主题长图 */\nexport const notCollapsedLogoImgOfDark = img1;\n/** 无 notCollapsedLogoImg 或 notCollapsedLogoImgOfDark 时，系统兜底采用的短文案，用于折叠边栏时显示 */\nexport const notCollapsedLogoLabel = 'xxx系统';\n\nconst img2 = 'https://raw.githubusercontent.com/fantasticsoul/assets/master/c2pro/short_logo.png';\n// 折叠时两种主题色的logo短图设置，可按实际情况填写不同的url，如无素材填写0长字符串，保证 collapsedLogoLabel 有文案即可\n/** 折叠时浅色主题短图 */\nexport const collapsedLogoImg = img2;\n/** 折叠时深色主题短图 */\nexport const collapsedLogoImgOfDark = img2;\n/** 无 collapsedLogoImg 或 collapsedLogoImgOfDark 时，系统兜底采用的短文案，用于折叠边栏时显示 */\nexport const collapsedLogoLabel = '酷炫';\n\nexport const img404 = '404_img_url';\nexport const img403 = '403_img_url';\n\nexport const LS_C2PRO_SETTINGS = 'C2ProSettings';\nexport const LS_C2PRO_SETTINGS_VER = 'C2ProSettingsVer';\n\nexport enum TopHeaderTypes {\n  FIXED = '1',\n  FLOWED = '2',\n  HIDDEN = '3',\n};\n\nexport enum TopNavBarTypes {\n  FIXED = '1',\n  FLOWED = '2',\n  HIDDEN = '3',\n};\n\nexport enum SiderViewTypes {\n  COLLAPSED = '1',\n  NOT_COLLAPSED = '2',\n  HIDDEN = '3',\n};\n\nexport enum SiteColorTypes {\n  /** 正常模式 */\n  NORMAL = '1',\n  /** 黑白模式（哀悼模式） */\n  GREY = '2',\n  /** 暗黑模式 */\n  DARK = '3',\n}\n\nexport enum SiderLogoTypes {\n  IMG_AND_LABEL = '1',\n  IMG = '2',\n};\n\nexport enum LoginStatus {\n  LOGGING = '1',\n  LOGIN_FAILED = '2',\n  LOGIN_SUCCESS = '3',\n}\n","\nexport function isLocalMode() {\n  return window.location.port !== '';\n}\n"],"sourceRoot":""}